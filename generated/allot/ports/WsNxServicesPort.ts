import { TnsgetAllCollectors } from "../definitions/TnsgetAllCollectors";
import { TnsgetAllCollectorsResponse } from "../definitions/TnsgetAllCollectorsResponse";
import { TnsimportDevice } from "../definitions/TnsimportDevice";
import { TnsimportDeviceResponse } from "../definitions/TnsimportDeviceResponse";
import { TnsgetServiceGroupsByIds } from "../definitions/TnsgetServiceGroupsByIds";
import { TnsgetServiceGroupsByIdsResponse } from "../definitions/TnsgetServiceGroupsByIdsResponse";
import { TnsdeleteVsCatalogEntries } from "../definitions/TnsdeleteVsCatalogEntries";
import { TnsdeleteVsCatalogEntriesResponse } from "../definitions/TnsdeleteVsCatalogEntriesResponse";
import { TnsgetDosCatalogEntries } from "../definitions/TnsgetDosCatalogEntries";
import { TnsgetDosCatalogEntriesResponse } from "../definitions/TnsgetDosCatalogEntriesResponse";
import { TnsgetNextAsymGroupId } from "../definitions/TnsgetNextAsymGroupId";
import { TnsgetNextAsymGroupIdResponse } from "../definitions/TnsgetNextAsymGroupIdResponse";
import { TnsgetVsIdByName } from "../definitions/TnsgetVsIdByName";
import { TnsgetVsIdByNameResponse } from "../definitions/TnsgetVsIdByNameResponse";
import { TnsdeleteUser } from "../definitions/TnsdeleteUser";
import { TnsdeleteUserResponse } from "../definitions/TnsdeleteUserResponse";
import { TnsaddIfcPortCatalogEntries } from "../definitions/TnsaddIfcPortCatalogEntries";
import { TnsaddIfcPortCatalogEntriesResponse } from "../definitions/TnsaddIfcPortCatalogEntriesResponse";
import { TnsgetClientDeviceGroupEntries } from "../definitions/TnsgetClientDeviceGroupEntries";
import { TnsgetClientDeviceGroupEntriesResponse } from "../definitions/TnsgetClientDeviceGroupEntriesResponse";
import { TnsrevertAllServiceGroupsToDefault } from "../definitions/TnsrevertAllServiceGroupsToDefault";
import { TnsrevertAllServiceGroupsToDefaultResponse } from "../definitions/TnsrevertAllServiceGroupsToDefaultResponse";
import { TnssaveWhiteList } from "../definitions/TnssaveWhiteList";
import { TnssaveWhiteListResponse } from "../definitions/TnssaveWhiteListResponse";
import { TnsinstallUpdatesFromLocalDisk } from "../definitions/TnsinstallUpdatesFromLocalDisk";
import { TnsinstallUpdatesFromLocalDiskResponse } from "../definitions/TnsinstallUpdatesFromLocalDiskResponse";
import { TnsgetAllChargingConditions2SpByPolicy } from "../definitions/TnsgetAllChargingConditions2SpByPolicy";
import { TnsgetAllChargingConditions2SpByPolicyResponse } from "../definitions/TnsgetAllChargingConditions2SpByPolicyResponse";
import { TnsgetAlertEntriesByIds } from "../definitions/TnsgetAlertEntriesByIds";
import { TnsgetAlertEntriesByIdsResponse } from "../definitions/TnsgetAlertEntriesByIdsResponse";
import { TnsupdateClientDeviceGroupEntries } from "../definitions/TnsupdateClientDeviceGroupEntries";
import { TnsupdateClientDeviceGroupEntriesResponse } from "../definitions/TnsupdateClientDeviceGroupEntriesResponse";
import { TnsgetDmOutputRecordByName } from "../definitions/TnsgetDmOutputRecordByName";
import { TnsgetDmOutputRecordByNameResponse } from "../definitions/TnsgetDmOutputRecordByNameResponse";
import { TnsgetServiceGroupIdByName } from "../definitions/TnsgetServiceGroupIdByName";
import { TnsgetServiceGroupIdByNameResponse } from "../definitions/TnsgetServiceGroupIdByNameResponse";
import { TnsdeleteGreCatalogEntries } from "../definitions/TnsdeleteGreCatalogEntries";
import { TnsdeleteGreCatalogEntriesResponse } from "../definitions/TnsdeleteGreCatalogEntriesResponse";
import { TnsgetClientDeviceGroupIdByName } from "../definitions/TnsgetClientDeviceGroupIdByName";
import { TnsgetClientDeviceGroupIdByNameResponse } from "../definitions/TnsgetClientDeviceGroupIdByNameResponse";
import { TnsgetContentValueId } from "../definitions/TnsgetContentValueId";
import { TnsgetContentValueIdResponse } from "../definitions/TnsgetContentValueIdResponse";
import { TnsgetDmInputFilteringRuleEntity } from "../definitions/TnsgetDmInputFilteringRuleEntity";
import { TnsgetDmInputFilteringRuleEntityResponse } from "../definitions/TnsgetDmInputFilteringRuleEntityResponse";
import { TnsdeleteTubeGroups } from "../definitions/TnsdeleteTubeGroups";
import { TnsdeleteTubeGroupsResponse } from "../definitions/TnsdeleteTubeGroupsResponse";
import { TnsremoveAndSetDeviceConfiguration } from "../definitions/TnsremoveAndSetDeviceConfiguration";
import { TnsremoveAndSetDeviceConfigurationResponse } from "../definitions/TnsremoveAndSetDeviceConfigurationResponse";
import { TnsupdateTubesQos } from "../definitions/TnsupdateTubesQos";
import { TnsupdateTubesQosResponse } from "../definitions/TnsupdateTubesQosResponse";
import { TnsgetUsers } from "../definitions/TnsgetUsers";
import { TnsgetUsersResponse } from "../definitions/TnsgetUsersResponse";
import { TnsgetSmpTopic } from "../definitions/TnsgetSmpTopic";
import { TnsgetSmpTopicResponse } from "../definitions/TnsgetSmpTopicResponse";
import { TnsgetWebSafeAuthenticatedUser } from "../definitions/TnsgetWebSafeAuthenticatedUser";
import { TnsgetWebSafeAuthenticatedUserResponse } from "../definitions/TnsgetWebSafeAuthenticatedUserResponse";
import { TnsupdateSubscriberIdFromSmf } from "../definitions/TnsupdateSubscriberIdFromSmf";
import { TnsupdateSubscriberIdFromSmfResponse } from "../definitions/TnsupdateSubscriberIdFromSmfResponse";
import { TnsgetDmEncryptionKey } from "../definitions/TnsgetDmEncryptionKey";
import { TnsgetDmEncryptionKeyResponse } from "../definitions/TnsgetDmEncryptionKeyResponse";
import { TnsgetClientDeviceEntriesByIds } from "../definitions/TnsgetClientDeviceEntriesByIds";
import { TnsgetClientDeviceEntriesByIdsResponse } from "../definitions/TnsgetClientDeviceEntriesByIdsResponse";
import { TnsgetGreGroupEntriesByIds } from "../definitions/TnsgetGreGroupEntriesByIds";
import { TnsgetGreGroupEntriesByIdsResponse } from "../definitions/TnsgetGreGroupEntriesByIdsResponse";
import { TnsrevertAllMonitoredServiceGroupToDefault } from "../definitions/TnsrevertAllMonitoredServiceGroupToDefault";
import { TnsrevertAllMonitoredServiceGroupToDefaultResponse } from "../definitions/TnsrevertAllMonitoredServiceGroupToDefaultResponse";
import { TnsgetWhiteList } from "../definitions/TnsgetWhiteList";
import { TnsgetWhiteListResponse } from "../definitions/TnsgetWhiteListResponse";
import { TnsgetRedirectInterfacesByDeviceId } from "../definitions/TnsgetRedirectInterfacesByDeviceId";
import { TnsgetRedirectInterfacesByDeviceIdResponse } from "../definitions/TnsgetRedirectInterfacesByDeviceIdResponse";
import { TnsupdateWebSafeUser } from "../definitions/TnsupdateWebSafeUser";
import { TnsupdateWebSafeUserResponse } from "../definitions/TnsupdateWebSafeUserResponse";
import { TnssetSmpTopic } from "../definitions/TnssetSmpTopic";
import { TnssetSmpTopicResponse } from "../definitions/TnssetSmpTopicResponse";
import { TnsgetSyslogEnabled } from "../definitions/TnsgetSyslogEnabled";
import { TnsgetSyslogEnabledResponse } from "../definitions/TnsgetSyslogEnabledResponse";
import { TnsgetQuotaEntriesByIds } from "../definitions/TnsgetQuotaEntriesByIds";
import { TnsgetQuotaEntriesByIdsResponse } from "../definitions/TnsgetQuotaEntriesByIdsResponse";
import { TnsdeleteApplicationEntities } from "../definitions/TnsdeleteApplicationEntities";
import { TnsdeleteApplicationEntitiesResponse } from "../definitions/TnsdeleteApplicationEntitiesResponse";
import { TnsgetDeviceCocTopic } from "../definitions/TnsgetDeviceCocTopic";
import { TnsgetDeviceCocTopicResponse } from "../definitions/TnsgetDeviceCocTopicResponse";
import { TnsgetQuotaPlansByIds } from "../definitions/TnsgetQuotaPlansByIds";
import { TnsgetQuotaPlansByIdsResponse } from "../definitions/TnsgetQuotaPlansByIdsResponse";
import { TnsdeleteNetworkDomains } from "../definitions/TnsdeleteNetworkDomains";
import { TnsdeleteNetworkDomainsResponse } from "../definitions/TnsdeleteNetworkDomainsResponse";
import { TnsdeleteGroups } from "../definitions/TnsdeleteGroups";
import { TnsdeleteGroupsResponse } from "../definitions/TnsdeleteGroupsResponse";
import { TnsdeleteQoeRuleDefCatalogEntries } from "../definitions/TnsdeleteQoeRuleDefCatalogEntries";
import { TnsdeleteQoeRuleDefCatalogEntriesResponse } from "../definitions/TnsdeleteQoeRuleDefCatalogEntriesResponse";
import { TnsgetByName } from "../definitions/TnsgetByName";
import { TnsgetByNameResponse } from "../definitions/TnsgetByNameResponse";
import { TnsgetChargingPlan2AppEntities } from "../definitions/TnsgetChargingPlan2AppEntities";
import { TnsgetChargingPlan2AppEntitiesResponse } from "../definitions/TnsgetChargingPlan2AppEntitiesResponse";
import { TnsgetChargingApplicationEntityByName } from "../definitions/TnsgetChargingApplicationEntityByName";
import { TnsgetChargingApplicationEntityByNameResponse } from "../definitions/TnsgetChargingApplicationEntityByNameResponse";
import { TnsgetSmpRadiusTargets } from "../definitions/TnsgetSmpRadiusTargets";
import { TnsgetSmpRadiusTargetsResponse } from "../definitions/TnsgetSmpRadiusTargetsResponse";
import { TnssetDataExportConfig } from "../definitions/TnssetDataExportConfig";
import { TnssetDataExportConfigResponse } from "../definitions/TnssetDataExportConfigResponse";
import { TnsgetCocCatalogEntries } from "../definitions/TnsgetCocCatalogEntries";
import { TnsgetCocCatalogEntriesResponse } from "../definitions/TnsgetCocCatalogEntriesResponse";
import { TnsgetHostGroupIdByName } from "../definitions/TnsgetHostGroupIdByName";
import { TnsgetHostGroupIdByNameResponse } from "../definitions/TnsgetHostGroupIdByNameResponse";
import { TnsaddSubscriberId } from "../definitions/TnsaddSubscriberId";
import { TnsaddSubscriberIdResponse } from "../definitions/TnsaddSubscriberIdResponse";
import { TnsdeleteVlanCatalogEntries } from "../definitions/TnsdeleteVlanCatalogEntries";
import { TnsdeleteVlanCatalogEntriesResponse } from "../definitions/TnsdeleteVlanCatalogEntriesResponse";
import { TnsgetClientDeviceEntries } from "../definitions/TnsgetClientDeviceEntries";
import { TnsgetClientDeviceEntriesResponse } from "../definitions/TnsgetClientDeviceEntriesResponse";
import { TnsgetSubscriberInstances } from "../definitions/TnsgetSubscriberInstances";
import { TnsgetSubscriberInstancesResponse } from "../definitions/TnsgetSubscriberInstancesResponse";
import { TnsgetCmtasReportStatus } from "../definitions/TnsgetCmtasReportStatus";
import { TnsgetCmtasReportStatusResponse } from "../definitions/TnsgetCmtasReportStatusResponse";
import { TnsgetWebSafeUsers } from "../definitions/TnsgetWebSafeUsers";
import { TnsgetWebSafeUsersResponse } from "../definitions/TnsgetWebSafeUsersResponse";
import { TnsgetVcs } from "../definitions/TnsgetVcs";
import { TnsgetVcsResponse } from "../definitions/TnsgetVcsResponse";
import { TnssetEnterpriseAddedServicesTopicDto } from "../definitions/TnssetEnterpriseAddedServicesTopicDto";
import { TnssetEnterpriseAddedServicesTopicDtoResponse } from "../definitions/TnssetEnterpriseAddedServicesTopicDtoResponse";
import { TnsgetRedundantUnitByDevice } from "../definitions/TnsgetRedundantUnitByDevice";
import { TnsgetRedundantUnitByDeviceResponse } from "../definitions/TnsgetRedundantUnitByDeviceResponse";
import { TnsaddServiceGroups } from "../definitions/TnsaddServiceGroups";
import { TnsaddServiceGroupsResponse } from "../definitions/TnsaddServiceGroupsResponse";
import { TnsupdateAlertCatalogEntries } from "../definitions/TnsupdateAlertCatalogEntries";
import { TnsupdateAlertCatalogEntriesResponse } from "../definitions/TnsupdateAlertCatalogEntriesResponse";
import { TnsgetPolicyDistributionGroups } from "../definitions/TnsgetPolicyDistributionGroups";
import { TnsgetPolicyDistributionGroupsResponse } from "../definitions/TnsgetPolicyDistributionGroupsResponse";
import { TnsgetDmOutputProfileByTypeAndName } from "../definitions/TnsgetDmOutputProfileByTypeAndName";
import { TnsgetDmOutputProfileByTypeAndNameResponse } from "../definitions/TnsgetDmOutputProfileByTypeAndNameResponse";
import { TnsgetBlackListCategories } from "../definitions/TnsgetBlackListCategories";
import { TnsgetBlackListCategoriesResponse } from "../definitions/TnsgetBlackListCategoriesResponse";
import { TnsupdateNetworkDomains } from "../definitions/TnsupdateNetworkDomains";
import { TnsupdateNetworkDomainsResponse } from "../definitions/TnsupdateNetworkDomainsResponse";
import { TnsgetQosIdByName } from "../definitions/TnsgetQosIdByName";
import { TnsgetQosIdByNameResponse } from "../definitions/TnsgetQosIdByNameResponse";
import { TnssetEnterpriseGeneralTopicDto } from "../definitions/TnssetEnterpriseGeneralTopicDto";
import { TnssetEnterpriseGeneralTopicDtoResponse } from "../definitions/TnssetEnterpriseGeneralTopicDtoResponse";
import { TnsupdateNppAccount } from "../definitions/TnsupdateNppAccount";
import { TnsupdateNppAccountResponse } from "../definitions/TnsupdateNppAccountResponse";
import { TnsupdateWuServer } from "../definitions/TnsupdateWuServer";
import { TnsupdateWuServerResponse } from "../definitions/TnsupdateWuServerResponse";
import { TnsgetSecretKey } from "../definitions/TnsgetSecretKey";
import { TnsgetSecretKeyResponse } from "../definitions/TnsgetSecretKeyResponse";
import { TnsupdateAutonomousSystemEntries } from "../definitions/TnsupdateAutonomousSystemEntries";
import { TnsupdateAutonomousSystemEntriesResponse } from "../definitions/TnsupdateAutonomousSystemEntriesResponse";
import { TnsexportPolicy } from "../definitions/TnsexportPolicy";
import { TnsexportPolicyResponse } from "../definitions/TnsexportPolicyResponse";
import { TnsaddVlanCatalogEntries } from "../definitions/TnsaddVlanCatalogEntries";
import { TnsaddVlanCatalogEntriesResponse } from "../definitions/TnsaddVlanCatalogEntriesResponse";
import { TnsremoveRtFilters } from "../definitions/TnsremoveRtFilters";
import { TnsremoveRtFiltersResponse } from "../definitions/TnsremoveRtFiltersResponse";
import { TnsdeleteWebSafeUser } from "../definitions/TnsdeleteWebSafeUser";
import { TnsdeleteWebSafeUserResponse } from "../definitions/TnsdeleteWebSafeUserResponse";
import { TnsupdateFacebookTrafficControlDto } from "../definitions/TnsupdateFacebookTrafficControlDto";
import { TnsupdateFacebookTrafficControlDtoResponse } from "../definitions/TnsupdateFacebookTrafficControlDtoResponse";
import { TnsupdateTubeGroups } from "../definitions/TnsupdateTubeGroups";
import { TnsupdateTubeGroupsResponse } from "../definitions/TnsupdateTubeGroupsResponse";
import { TnsupdateServicePlanAddOnEntries } from "../definitions/TnsupdateServicePlanAddOnEntries";
import { TnsupdateServicePlanAddOnEntriesResponse } from "../definitions/TnsupdateServicePlanAddOnEntriesResponse";
import { TnsgetHheIdByName } from "../definitions/TnsgetHheIdByName";
import { TnsgetHheIdByNameResponse } from "../definitions/TnsgetHheIdByNameResponse";
import { TnsisNetAwareness } from "../definitions/TnsisNetAwareness";
import { TnsisNetAwarenessResponse } from "../definitions/TnsisNetAwarenessResponse";
import { TnsgetVlanGroupIdByName } from "../definitions/TnsgetVlanGroupIdByName";
import { TnsgetVlanGroupIdByNameResponse } from "../definitions/TnsgetVlanGroupIdByNameResponse";
import { TnsgetChargingPlanEntries } from "../definitions/TnsgetChargingPlanEntries";
import { TnsgetChargingPlanEntriesResponse } from "../definitions/TnsgetChargingPlanEntriesResponse";
import { TnsgetHostsByNames } from "../definitions/TnsgetHostsByNames";
import { TnsgetHostsByNamesResponse } from "../definitions/TnsgetHostsByNamesResponse";
import { TnsgetAllNeDevice } from "../definitions/TnsgetAllNeDevice";
import { TnsgetAllNeDeviceResponse } from "../definitions/TnsgetAllNeDeviceResponse";
import { TnssaveControlPlaneIdentifierNames } from "../definitions/TnssaveControlPlaneIdentifierNames";
import { TnssaveControlPlaneIdentifierNamesResponse } from "../definitions/TnssaveControlPlaneIdentifierNamesResponse";
import { TnsgetWebSafeUserIdByName } from "../definitions/TnsgetWebSafeUserIdByName";
import { TnsgetWebSafeUserIdByNameResponse } from "../definitions/TnsgetWebSafeUserIdByNameResponse";
import { TnsupdateQosCatalogEntries } from "../definitions/TnsupdateQosCatalogEntries";
import { TnsupdateQosCatalogEntriesResponse } from "../definitions/TnsupdateQosCatalogEntriesResponse";
import { TnsupdateTosCatalogEntries } from "../definitions/TnsupdateTosCatalogEntries";
import { TnsupdateTosCatalogEntriesResponse } from "../definitions/TnsupdateTosCatalogEntriesResponse";
import { TnsupdateSmpGroup } from "../definitions/TnsupdateSmpGroup";
import { TnsupdateSmpGroupResponse } from "../definitions/TnsupdateSmpGroupResponse";
import { TnsgetClientDeviceGroupEntriesByIds } from "../definitions/TnsgetClientDeviceGroupEntriesByIds";
import { TnsgetClientDeviceGroupEntriesByIdsResponse } from "../definitions/TnsgetClientDeviceGroupEntriesByIdsResponse";
import { TnssetProxyServer } from "../definitions/TnssetProxyServer";
import { TnssetProxyServerResponse } from "../definitions/TnssetProxyServerResponse";
import { TnsgetHostGroupByIds } from "../definitions/TnsgetHostGroupByIds";
import { TnsgetHostGroupByIdsResponse } from "../definitions/TnsgetHostGroupByIdsResponse";
import { TnsdeleteAlertCatalogEntries } from "../definitions/TnsdeleteAlertCatalogEntries";
import { TnsdeleteAlertCatalogEntriesResponse } from "../definitions/TnsdeleteAlertCatalogEntriesResponse";
import { TnsrollbackWuDevice } from "../definitions/TnsrollbackWuDevice";
import { TnsrollbackWuDeviceResponse } from "../definitions/TnsrollbackWuDeviceResponse";
import { TnsgetGroupMemberIdByServiceId } from "../definitions/TnsgetGroupMemberIdByServiceId";
import { TnsgetGroupMemberIdByServiceIdResponse } from "../definitions/TnsgetGroupMemberIdByServiceIdResponse";
import { TnsupdateMobileDeviceDb } from "../definitions/TnsupdateMobileDeviceDb";
import { TnsupdateMobileDeviceDbResponse } from "../definitions/TnsupdateMobileDeviceDbResponse";
import { TnsupdateVsCatalogEntries } from "../definitions/TnsupdateVsCatalogEntries";
import { TnsupdateVsCatalogEntriesResponse } from "../definitions/TnsupdateVsCatalogEntriesResponse";
import { TnsgetCocGroupEntriesByIds } from "../definitions/TnsgetCocGroupEntriesByIds";
import { TnsgetCocGroupEntriesByIdsResponse } from "../definitions/TnsgetCocGroupEntriesByIdsResponse";
import { TnsgetQuotaPlans } from "../definitions/TnsgetQuotaPlans";
import { TnsgetQuotaPlansResponse } from "../definitions/TnsgetQuotaPlansResponse";
import { TnsgetPortsTopicDto } from "../definitions/TnsgetPortsTopicDto";
import { TnsgetPortsTopicDtoResponse } from "../definitions/TnsgetPortsTopicDtoResponse";
import { TnsdeleteHheCatalogEntries } from "../definitions/TnsdeleteHheCatalogEntries";
import { TnsdeleteHheCatalogEntriesResponse } from "../definitions/TnsdeleteHheCatalogEntriesResponse";
import { TnsupdateApplicationEntities } from "../definitions/TnsupdateApplicationEntities";
import { TnsupdateApplicationEntitiesResponse } from "../definitions/TnsupdateApplicationEntitiesResponse";
import { TnsgetQosEntriesByIds } from "../definitions/TnsgetQosEntriesByIds";
import { TnsgetQosEntriesByIdsResponse } from "../definitions/TnsgetQosEntriesByIdsResponse";
import { TnsupdateTubeTca } from "../definitions/TnsupdateTubeTca";
import { TnsupdateTubeTcaResponse } from "../definitions/TnsupdateTubeTcaResponse";
import { TnsgetAllCsSystems } from "../definitions/TnsgetAllCsSystems";
import { TnsgetAllCsSystemsResponse } from "../definitions/TnsgetAllCsSystemsResponse";
import { TnsgetQuotaRulesByIds } from "../definitions/TnsgetQuotaRulesByIds";
import { TnsgetQuotaRulesByIdsResponse } from "../definitions/TnsgetQuotaRulesByIdsResponse";
import { TnssetFacebookPollingTimeInterval } from "../definitions/TnssetFacebookPollingTimeInterval";
import { TnssetFacebookPollingTimeIntervalResponse } from "../definitions/TnssetFacebookPollingTimeIntervalResponse";
import { TnsdeleteMdDevice } from "../definitions/TnsdeleteMdDevice";
import { TnsdeleteMdDeviceResponse } from "../definitions/TnsdeleteMdDeviceResponse";
import { TnsupdateAutonomousSystemFile } from "../definitions/TnsupdateAutonomousSystemFile";
import { TnsupdateAutonomousSystemFileResponse } from "../definitions/TnsupdateAutonomousSystemFileResponse";
import { TnsupdateTimeCatalogEntries } from "../definitions/TnsupdateTimeCatalogEntries";
import { TnsupdateTimeCatalogEntriesResponse } from "../definitions/TnsupdateTimeCatalogEntriesResponse";
import { TnsgetAllChargingConditionsByPolicy } from "../definitions/TnsgetAllChargingConditionsByPolicy";
import { TnsgetAllChargingConditionsByPolicyResponse } from "../definitions/TnsgetAllChargingConditionsByPolicyResponse";
import { TnsgetvlanCatalogEntries } from "../definitions/TnsgetvlanCatalogEntries";
import { TnsgetvlanCatalogEntriesResponse } from "../definitions/TnsgetvlanCatalogEntriesResponse";
import { TnsloadWebSafeImportFile } from "../definitions/TnsloadWebSafeImportFile";
import { TnsloadWebSafeImportFileResponse } from "../definitions/TnsloadWebSafeImportFileResponse";
import { TnsupdatePolicy } from "../definitions/TnsupdatePolicy";
import { TnsupdatePolicyResponse } from "../definitions/TnsupdatePolicyResponse";
import { TnsdeleteServiceCatalogEntries } from "../definitions/TnsdeleteServiceCatalogEntries";
import { TnsdeleteServiceCatalogEntriesResponse } from "../definitions/TnsdeleteServiceCatalogEntriesResponse";
import { TnsgetAllParameters } from "../definitions/TnsgetAllParameters";
import { TnsgetAllParametersResponse } from "../definitions/TnsgetAllParametersResponse";
import { TnscreateAsymGroups } from "../definitions/TnscreateAsymGroups";
import { TnscreateAsymGroupsResponse } from "../definitions/TnscreateAsymGroupsResponse";
import { TnssaveBlackListCategories } from "../definitions/TnssaveBlackListCategories";
import { TnssaveBlackListCategoriesResponse } from "../definitions/TnssaveBlackListCategoriesResponse";
import { TnsgetHostGroupsByNames } from "../definitions/TnsgetHostGroupsByNames";
import { TnsgetHostGroupsByNamesResponse } from "../definitions/TnsgetHostGroupsByNamesResponse";
import { TnssaveBlackList } from "../definitions/TnssaveBlackList";
import { TnssaveBlackListResponse } from "../definitions/TnssaveBlackListResponse";
import { TnsgetServicePlanAddOnEntriesByIds } from "../definitions/TnsgetServicePlanAddOnEntriesByIds";
import { TnsgetServicePlanAddOnEntriesByIdsResponse } from "../definitions/TnsgetServicePlanAddOnEntriesByIdsResponse";
import { TnsgetUserIdByName } from "../definitions/TnsgetUserIdByName";
import { TnsgetUserIdByNameResponse } from "../definitions/TnsgetUserIdByNameResponse";
import { TnsupdateQuotaPlans } from "../definitions/TnsupdateQuotaPlans";
import { TnsupdateQuotaPlansResponse } from "../definitions/TnsupdateQuotaPlansResponse";
import { TnsgetAlertIdByName } from "../definitions/TnsgetAlertIdByName";
import { TnsgetAlertIdByNameResponse } from "../definitions/TnsgetAlertIdByNameResponse";
import { TnsaddIfcGroupCatalogEntries } from "../definitions/TnsaddIfcGroupCatalogEntries";
import { TnsaddIfcGroupCatalogEntriesResponse } from "../definitions/TnsaddIfcGroupCatalogEntriesResponse";
import { TnsisQuotaAvilable } from "../definitions/TnsisQuotaAvilable";
import { TnsisQuotaAvilableResponse } from "../definitions/TnsisQuotaAvilableResponse";
import { TnsaddVlanGroupCatalogEntries } from "../definitions/TnsaddVlanGroupCatalogEntries";
import { TnsaddVlanGroupCatalogEntriesResponse } from "../definitions/TnsaddVlanGroupCatalogEntriesResponse";
import { TnsgetFacebookRevisionConfiguration } from "../definitions/TnsgetFacebookRevisionConfiguration";
import { TnsgetFacebookRevisionConfigurationResponse } from "../definitions/TnsgetFacebookRevisionConfigurationResponse";
import { TnsgetAllAlarms } from "../definitions/TnsgetAllAlarms";
import { TnsgetAllAlarmsResponse } from "../definitions/TnsgetAllAlarmsResponse";
import { TnsisRoutingMapBelongToDefaultNetworkDomain } from "../definitions/TnsisRoutingMapBelongToDefaultNetworkDomain";
import { TnsisRoutingMapBelongToDefaultNetworkDomainResponse } from "../definitions/TnsisRoutingMapBelongToDefaultNetworkDomainResponse";
import { TnsaddGreGroupCatalogEntries } from "../definitions/TnsaddGreGroupCatalogEntries";
import { TnsaddGreGroupCatalogEntriesResponse } from "../definitions/TnsaddGreGroupCatalogEntriesResponse";
import { TnsgetQoeRuleDefEntriesByIds } from "../definitions/TnsgetQoeRuleDefEntriesByIds";
import { TnsgetQoeRuleDefEntriesByIdsResponse } from "../definitions/TnsgetQoeRuleDefEntriesByIdsResponse";
import { TnsdeleteIfcPortCatalogEntries } from "../definitions/TnsdeleteIfcPortCatalogEntries";
import { TnsdeleteIfcPortCatalogEntriesResponse } from "../definitions/TnsdeleteIfcPortCatalogEntriesResponse";
import { TnsupdateGreGroupCatalogEntries } from "../definitions/TnsupdateGreGroupCatalogEntries";
import { TnsupdateGreGroupCatalogEntriesResponse } from "../definitions/TnsupdateGreGroupCatalogEntriesResponse";
import { TnsgetTosIdByName } from "../definitions/TnsgetTosIdByName";
import { TnsgetTosIdByNameResponse } from "../definitions/TnsgetTosIdByNameResponse";
import { TnsdeleteIfcGroupCatalogEntries } from "../definitions/TnsdeleteIfcGroupCatalogEntries";
import { TnsdeleteIfcGroupCatalogEntriesResponse } from "../definitions/TnsdeleteIfcGroupCatalogEntriesResponse";
import { TnsgetProxyServer } from "../definitions/TnsgetProxyServer";
import { TnsgetProxyServerResponse } from "../definitions/TnsgetProxyServerResponse";
import { TnsgetSgTopic } from "../definitions/TnsgetSgTopic";
import { TnsgetSgTopicResponse } from "../definitions/TnsgetSgTopicResponse";
import { TnsgetTubeGroups } from "../definitions/TnsgetTubeGroups";
import { TnsgetTubeGroupsResponse } from "../definitions/TnsgetTubeGroupsResponse";
import { TnsmodifyRemoteNxs } from "../definitions/TnsmodifyRemoteNxs";
import { TnsmodifyRemoteNxsResponse } from "../definitions/TnsmodifyRemoteNxsResponse";
import { TnsgetLicenseVersion } from "../definitions/TnsgetLicenseVersion";
import { TnsgetLicenseVersionResponse } from "../definitions/TnsgetLicenseVersionResponse";
import { TnsgetClientDeviceIdByName } from "../definitions/TnsgetClientDeviceIdByName";
import { TnsgetClientDeviceIdByNameResponse } from "../definitions/TnsgetClientDeviceIdByNameResponse";
import { TnsgetDataExportConfig } from "../definitions/TnsgetDataExportConfig";
import { TnsgetDataExportConfigResponse } from "../definitions/TnsgetDataExportConfigResponse";
import { TnsgetGreIdByName } from "../definitions/TnsgetGreIdByName";
import { TnsgetGreIdByNameResponse } from "../definitions/TnsgetGreIdByNameResponse";
import { TnsgetHostIdByName } from "../definitions/TnsgetHostIdByName";
import { TnsgetHostIdByNameResponse } from "../definitions/TnsgetHostIdByNameResponse";
import { TnsgetAllApplicationEntities } from "../definitions/TnsgetAllApplicationEntities";
import { TnsgetAllApplicationEntitiesResponse } from "../definitions/TnsgetAllApplicationEntitiesResponse";
import { TnsaddChargingRule } from "../definitions/TnsaddChargingRule";
import { TnsaddChargingRuleResponse } from "../definitions/TnsaddChargingRuleResponse";
import { TnsgetTosEntriesByIds } from "../definitions/TnsgetTosEntriesByIds";
import { TnsgetTosEntriesByIdsResponse } from "../definitions/TnsgetTosEntriesByIdsResponse";
import { TnsreloadProductCapabilities } from "../definitions/TnsreloadProductCapabilities";
import { TnsreloadProductCapabilitiesResponse } from "../definitions/TnsreloadProductCapabilitiesResponse";
import { TnsgetTubeDto1 } from "../definitions/TnsgetTubeDto1";
import { TnsgetTubeDto1Response } from "../definitions/TnsgetTubeDto1Response";
import { TnsdeleteGreGroupCatalogEntries } from "../definitions/TnsdeleteGreGroupCatalogEntries";
import { TnsdeleteGreGroupCatalogEntriesResponse } from "../definitions/TnsdeleteGreGroupCatalogEntriesResponse";
import { TnssetDeviceSecurityTopic } from "../definitions/TnssetDeviceSecurityTopic";
import { TnssetDeviceSecurityTopicResponse } from "../definitions/TnssetDeviceSecurityTopicResponse";
import { TnsdumpCache } from "../definitions/TnsdumpCache";
import { TnsdumpCacheResponse } from "../definitions/TnsdumpCacheResponse";
import { TnsgetPolicyIdByName } from "../definitions/TnsgetPolicyIdByName";
import { TnsgetPolicyIdByNameResponse } from "../definitions/TnsgetPolicyIdByNameResponse";
import { TnsgetNetworkDomainsByIds } from "../definitions/TnsgetNetworkDomainsByIds";
import { TnsgetNetworkDomainsByIdsResponse } from "../definitions/TnsgetNetworkDomainsByIdsResponse";
import { TnsgetQoeRuleDefCatalogEntries } from "../definitions/TnsgetQoeRuleDefCatalogEntries";
import { TnsgetQoeRuleDefCatalogEntriesResponse } from "../definitions/TnsgetQoeRuleDefCatalogEntriesResponse";
import { TnsgetRemoteNxEntities } from "../definitions/TnsgetRemoteNxEntities";
import { TnsgetRemoteNxEntitiesResponse } from "../definitions/TnsgetRemoteNxEntitiesResponse";
import { TnsgetDefaultAggregations } from "../definitions/TnsgetDefaultAggregations";
import { TnsgetDefaultAggregationsResponse } from "../definitions/TnsgetDefaultAggregationsResponse";
import { TnssetParameters } from "../definitions/TnssetParameters";
import { TnssetParametersResponse } from "../definitions/TnssetParametersResponse";
import { TnsgetContentKeyId } from "../definitions/TnsgetContentKeyId";
import { TnsgetContentKeyIdResponse } from "../definitions/TnsgetContentKeyIdResponse";
import { TnsaddAutonomousSystemEntries } from "../definitions/TnsaddAutonomousSystemEntries";
import { TnsaddAutonomousSystemEntriesResponse } from "../definitions/TnsaddAutonomousSystemEntriesResponse";
import { TnsdeleteServicePlanAddOnEntries } from "../definitions/TnsdeleteServicePlanAddOnEntries";
import { TnsdeleteServicePlanAddOnEntriesResponse } from "../definitions/TnsdeleteServicePlanAddOnEntriesResponse";
import { TnsgetBlackList } from "../definitions/TnsgetBlackList";
import { TnsgetBlackListResponse } from "../definitions/TnsgetBlackListResponse";
import { TnsupdateQoeRuleDefCatalogEntries } from "../definitions/TnsupdateQoeRuleDefCatalogEntries";
import { TnsupdateQoeRuleDefCatalogEntriesResponse } from "../definitions/TnsupdateQoeRuleDefCatalogEntriesResponse";
import { TnsremoveNppAccounts } from "../definitions/TnsremoveNppAccounts";
import { TnsremoveNppAccountsResponse } from "../definitions/TnsremoveNppAccountsResponse";
import { TnsgetAllChargingRuleByPolicy } from "../definitions/TnsgetAllChargingRuleByPolicy";
import { TnsgetAllChargingRuleByPolicyResponse } from "../definitions/TnsgetAllChargingRuleByPolicyResponse";
import { TnsfetchCellSectors } from "../definitions/TnsfetchCellSectors";
import { TnsfetchCellSectorsResponse } from "../definitions/TnsfetchCellSectorsResponse";
import { TnsaddNppAccount } from "../definitions/TnsaddNppAccount";
import { TnsaddNppAccountResponse } from "../definitions/TnsaddNppAccountResponse";
import { TnsdeleteCocGroupCatalogEntries } from "../definitions/TnsdeleteCocGroupCatalogEntries";
import { TnsdeleteCocGroupCatalogEntriesResponse } from "../definitions/TnsdeleteCocGroupCatalogEntriesResponse";
import { TnsaddBiHaGroup } from "../definitions/TnsaddBiHaGroup";
import { TnsaddBiHaGroupResponse } from "../definitions/TnsaddBiHaGroupResponse";
import { TnsupdateDmGlobalInputFilteringRuleEntities } from "../definitions/TnsupdateDmGlobalInputFilteringRuleEntities";
import { TnsupdateDmGlobalInputFilteringRuleEntitiesResponse } from "../definitions/TnsupdateDmGlobalInputFilteringRuleEntitiesResponse";
import { TnsgetUserSpecificServiceEntities } from "../definitions/TnsgetUserSpecificServiceEntities";
import { TnsgetUserSpecificServiceEntitiesResponse } from "../definitions/TnsgetUserSpecificServiceEntitiesResponse";
import { TnsupdateDosCatalogEntries } from "../definitions/TnsupdateDosCatalogEntries";
import { TnsupdateDosCatalogEntriesResponse } from "../definitions/TnsupdateDosCatalogEntriesResponse";
import { TnsaddHheCatalogEntries } from "../definitions/TnsaddHheCatalogEntries";
import { TnsaddHheCatalogEntriesResponse } from "../definitions/TnsaddHheCatalogEntriesResponse";
import { TnsgetGreGroupIdByName } from "../definitions/TnsgetGreGroupIdByName";
import { TnsgetGreGroupIdByNameResponse } from "../definitions/TnsgetGreGroupIdByNameResponse";
import { TnsgetTosCatalogEntries } from "../definitions/TnsgetTosCatalogEntries";
import { TnsgetTosCatalogEntriesResponse } from "../definitions/TnsgetTosCatalogEntriesResponse";
import { TnsaddTimeCatalogEntries } from "../definitions/TnsaddTimeCatalogEntries";
import { TnsaddTimeCatalogEntriesResponse } from "../definitions/TnsaddTimeCatalogEntriesResponse";
import { TnsgetAllNetworkDomains } from "../definitions/TnsgetAllNetworkDomains";
import { TnsgetAllNetworkDomainsResponse } from "../definitions/TnsgetAllNetworkDomainsResponse";
import { TnsisSupportedProperty } from "../definitions/TnsisSupportedProperty";
import { TnsisSupportedPropertyResponse } from "../definitions/TnsisSupportedPropertyResponse";
import { TnsgetQosCatalogEntries } from "../definitions/TnsgetQosCatalogEntries";
import { TnsgetQosCatalogEntriesResponse } from "../definitions/TnsgetQosCatalogEntriesResponse";
import { TnsdeleteSmpGroup } from "../definitions/TnsdeleteSmpGroup";
import { TnsdeleteSmpGroupResponse } from "../definitions/TnsdeleteSmpGroupResponse";
import { TnsdeleteHostCatalogEntries } from "../definitions/TnsdeleteHostCatalogEntries";
import { TnsdeleteHostCatalogEntriesResponse } from "../definitions/TnsdeleteHostCatalogEntriesResponse";
import { TnsaddTubeGroups } from "../definitions/TnsaddTubeGroups";
import { TnsaddTubeGroupsResponse } from "../definitions/TnsaddTubeGroupsResponse";
import { TnsgetServiceGroups } from "../definitions/TnsgetServiceGroups";
import { TnsgetServiceGroupsResponse } from "../definitions/TnsgetServiceGroupsResponse";
import { TnsgetChargingPlan2AppEntitieaByName } from "../definitions/TnsgetChargingPlan2AppEntitieaByName";
import { TnsgetChargingPlan2AppEntitieaByNameResponse } from "../definitions/TnsgetChargingPlan2AppEntitieaByNameResponse";
import { TnsfindCsEtlCountByCollectorId } from "../definitions/TnsfindCsEtlCountByCollectorId";
import { TnsfindCsEtlCountByCollectorIdResponse } from "../definitions/TnsfindCsEtlCountByCollectorIdResponse";
import { TnsgetDmGlobalTriggerTimeout } from "../definitions/TnsgetDmGlobalTriggerTimeout";
import { TnsgetDmGlobalTriggerTimeoutResponse } from "../definitions/TnsgetDmGlobalTriggerTimeoutResponse";
import { TnsgetIfcGroupCatalogEntries } from "../definitions/TnsgetIfcGroupCatalogEntries";
import { TnsgetIfcGroupCatalogEntriesResponse } from "../definitions/TnsgetIfcGroupCatalogEntriesResponse";
import { TnsisFeatureEnabled } from "../definitions/TnsisFeatureEnabled";
import { TnsisFeatureEnabledResponse } from "../definitions/TnsisFeatureEnabledResponse";
import { TnsaddVsCatalogEntries } from "../definitions/TnsaddVsCatalogEntries";
import { TnsaddVsCatalogEntriesResponse } from "../definitions/TnsaddVsCatalogEntriesResponse";
import { TnsgetCocGroupCatalogEntries } from "../definitions/TnsgetCocGroupCatalogEntries";
import { TnsgetCocGroupCatalogEntriesResponse } from "../definitions/TnsgetCocGroupCatalogEntriesResponse";
import { TnsdeleteQuotaPlans } from "../definitions/TnsdeleteQuotaPlans";
import { TnsdeleteQuotaPlansResponse } from "../definitions/TnsdeleteQuotaPlansResponse";
import { TnsgetNetUnitInterfaceStatus } from "../definitions/TnsgetNetUnitInterfaceStatus";
import { TnsgetNetUnitInterfaceStatusResponse } from "../definitions/TnsgetNetUnitInterfaceStatusResponse";
import { TnsgetTubeTcAs } from "../definitions/TnsgetTubeTcAs";
import { TnsgetTubeTcAsResponse } from "../definitions/TnsgetTubeTcAsResponse";
import { TnsupdateVlanCatalogEntries } from "../definitions/TnsupdateVlanCatalogEntries";
import { TnsupdateVlanCatalogEntriesResponse } from "../definitions/TnsupdateVlanCatalogEntriesResponse";
import { TnsaddServiceCatalogEntries } from "../definitions/TnsaddServiceCatalogEntries";
import { TnsaddServiceCatalogEntriesResponse } from "../definitions/TnsaddServiceCatalogEntriesResponse";
import { TnsgetCocIdByName } from "../definitions/TnsgetCocIdByName";
import { TnsgetCocIdByNameResponse } from "../definitions/TnsgetCocIdByNameResponse";
import { TnsgetChargingPlanEntityByName } from "../definitions/TnsgetChargingPlanEntityByName";
import { TnsgetChargingPlanEntityByNameResponse } from "../definitions/TnsgetChargingPlanEntityByNameResponse";
import { TnsupdateMdDevice } from "../definitions/TnsupdateMdDevice";
import { TnsupdateMdDeviceResponse } from "../definitions/TnsupdateMdDeviceResponse";
import { TnsdeleteAutonomousSystemFile } from "../definitions/TnsdeleteAutonomousSystemFile";
import { TnsdeleteAutonomousSystemFileResponse } from "../definitions/TnsdeleteAutonomousSystemFileResponse";
import { TnssetDmEncryptionKey } from "../definitions/TnssetDmEncryptionKey";
import { TnssetDmEncryptionKeyResponse } from "../definitions/TnssetDmEncryptionKeyResponse";
import { TnsgetEnterpriseSnmpTopicDto } from "../definitions/TnsgetEnterpriseSnmpTopicDto";
import { TnsgetEnterpriseSnmpTopicDtoResponse } from "../definitions/TnsgetEnterpriseSnmpTopicDtoResponse";
import { TnsupdateCocCatalogEntries } from "../definitions/TnsupdateCocCatalogEntries";
import { TnsupdateCocCatalogEntriesResponse } from "../definitions/TnsupdateCocCatalogEntriesResponse";
import { TnsgetEnterpriseServersTopicDto } from "../definitions/TnsgetEnterpriseServersTopicDto";
import { TnsgetEnterpriseServersTopicDtoResponse } from "../definitions/TnsgetEnterpriseServersTopicDtoResponse";
import { TnsgetDmGlobalInputFilteringRuleXml } from "../definitions/TnsgetDmGlobalInputFilteringRuleXml";
import { TnsgetDmGlobalInputFilteringRuleXmlResponse } from "../definitions/TnsgetDmGlobalInputFilteringRuleXmlResponse";
import { TnsdeleteEventActionCatalogEntries } from "../definitions/TnsdeleteEventActionCatalogEntries";
import { TnsdeleteEventActionCatalogEntriesResponse } from "../definitions/TnsdeleteEventActionCatalogEntriesResponse";
import { TnsgetSyslogConnections } from "../definitions/TnsgetSyslogConnections";
import { TnsgetSyslogConnectionsResponse } from "../definitions/TnsgetSyslogConnectionsResponse";
import { TnssetConfiguration } from "../definitions/TnssetConfiguration";
import { TnssetConfigurationResponse } from "../definitions/TnssetConfigurationResponse";
import { TnsaddTosCatalogEntries } from "../definitions/TnsaddTosCatalogEntries";
import { TnsaddTosCatalogEntriesResponse } from "../definitions/TnsaddTosCatalogEntriesResponse";
import { TnsaddQoeRuleDefCatalogEntries } from "../definitions/TnsaddQoeRuleDefCatalogEntries";
import { TnsaddQoeRuleDefCatalogEntriesResponse } from "../definitions/TnsaddQoeRuleDefCatalogEntriesResponse";
import { TnssetEncryptedDatabasePassword } from "../definitions/TnssetEncryptedDatabasePassword";
import { TnssetEncryptedDatabasePasswordResponse } from "../definitions/TnssetEncryptedDatabasePasswordResponse";
import { TnsaddQosCatalogEntries } from "../definitions/TnsaddQosCatalogEntries";
import { TnsaddQosCatalogEntriesResponse } from "../definitions/TnsaddQosCatalogEntriesResponse";
import { TnsaddRtFilters } from "../definitions/TnsaddRtFilters";
import { TnsaddRtFiltersResponse } from "../definitions/TnsaddRtFiltersResponse";
import { TnsdeleteQuotaRules } from "../definitions/TnsdeleteQuotaRules";
import { TnsdeleteQuotaRulesResponse } from "../definitions/TnsdeleteQuotaRulesResponse";
import { TnsupdateVlanGroupCatalogEntries } from "../definitions/TnsupdateVlanGroupCatalogEntries";
import { TnsupdateVlanGroupCatalogEntriesResponse } from "../definitions/TnsupdateVlanGroupCatalogEntriesResponse";
import { TnsupdateSmpRadiusTargets } from "../definitions/TnsupdateSmpRadiusTargets";
import { TnsupdateSmpRadiusTargetsResponse } from "../definitions/TnsupdateSmpRadiusTargetsResponse";
import { TnsgetFacebookTrafficControlDto } from "../definitions/TnsgetFacebookTrafficControlDto";
import { TnsgetFacebookTrafficControlDtoResponse } from "../definitions/TnsgetFacebookTrafficControlDtoResponse";
import { TnsgetRemoteNxsByNames } from "../definitions/TnsgetRemoteNxsByNames";
import { TnsgetRemoteNxsByNamesResponse } from "../definitions/TnsgetRemoteNxsByNamesResponse";
import { TnsgetDeviceByName } from "../definitions/TnsgetDeviceByName";
import { TnsgetDeviceByNameResponse } from "../definitions/TnsgetDeviceByNameResponse";
import { TnsgetHheCatalogEntries } from "../definitions/TnsgetHheCatalogEntries";
import { TnsgetHheCatalogEntriesResponse } from "../definitions/TnsgetHheCatalogEntriesResponse";
import { TnssetDmGlobalTriggerTimeout } from "../definitions/TnssetDmGlobalTriggerTimeout";
import { TnssetDmGlobalTriggerTimeoutResponse } from "../definitions/TnssetDmGlobalTriggerTimeoutResponse";
import { TnsgetChargingAppIdByName } from "../definitions/TnsgetChargingAppIdByName";
import { TnsgetChargingAppIdByNameResponse } from "../definitions/TnsgetChargingAppIdByNameResponse";
import { TnsgetIfcPortCatalogEntries } from "../definitions/TnsgetIfcPortCatalogEntries";
import { TnsgetIfcPortCatalogEntriesResponse } from "../definitions/TnsgetIfcPortCatalogEntriesResponse";
import { TnsgetDeviceSecurityTopic } from "../definitions/TnsgetDeviceSecurityTopic";
import { TnsgetDeviceSecurityTopicResponse } from "../definitions/TnsgetDeviceSecurityTopicResponse";
import { TnsvalidateSsgExistence } from "../definitions/TnsvalidateSsgExistence";
import { TnsvalidateSsgExistenceResponse } from "../definitions/TnsvalidateSsgExistenceResponse";
import { TnsgetServiceDataByIds } from "../definitions/TnsgetServiceDataByIds";
import { TnsgetServiceDataByIdsResponse } from "../definitions/TnsgetServiceDataByIdsResponse";
import { TnsprepareToRedistribute } from "../definitions/TnsprepareToRedistribute";
import { TnsprepareToRedistributeResponse } from "../definitions/TnsprepareToRedistributeResponse";
import { TnssetNxLicense } from "../definitions/TnssetNxLicense";
import { TnssetNxLicenseResponse } from "../definitions/TnssetNxLicenseResponse";
import { TnsdeleteQosCatalogEntries } from "../definitions/TnsdeleteQosCatalogEntries";
import { TnsdeleteQosCatalogEntriesResponse } from "../definitions/TnsdeleteQosCatalogEntriesResponse";
import { TnsgetSmpSessionUpdatesAttributesFromTopic } from "../definitions/TnsgetSmpSessionUpdatesAttributesFromTopic";
import { TnsgetSmpSessionUpdatesAttributesFromTopicResponse } from "../definitions/TnsgetSmpSessionUpdatesAttributesFromTopicResponse";
import { TnsaddQuotaEntries } from "../definitions/TnsaddQuotaEntries";
import { TnsaddQuotaEntriesResponse } from "../definitions/TnsaddQuotaEntriesResponse";
import { TnsdeleteTosCatalogEntries } from "../definitions/TnsdeleteTosCatalogEntries";
import { TnsdeleteTosCatalogEntriesResponse } from "../definitions/TnsdeleteTosCatalogEntriesResponse";
import { TnsgetHostEntriesByIds } from "../definitions/TnsgetHostEntriesByIds";
import { TnsgetHostEntriesByIdsResponse } from "../definitions/TnsgetHostEntriesByIdsResponse";
import { TnsgetQuotaEntries } from "../definitions/TnsgetQuotaEntries";
import { TnsgetQuotaEntriesResponse } from "../definitions/TnsgetQuotaEntriesResponse";
import { TnsrollbackWuServer } from "../definitions/TnsrollbackWuServer";
import { TnsrollbackWuServerResponse } from "../definitions/TnsrollbackWuServerResponse";
import { TnsaddAlertCatalogEntries } from "../definitions/TnsaddAlertCatalogEntries";
import { TnsaddAlertCatalogEntriesResponse } from "../definitions/TnsaddAlertCatalogEntriesResponse";
import { TnsgetParameter } from "../definitions/TnsgetParameter";
import { TnsgetParameterResponse } from "../definitions/TnsgetParameterResponse";
import { TnssetDmFieldExtension } from "../definitions/TnssetDmFieldExtension";
import { TnssetDmFieldExtensionResponse } from "../definitions/TnssetDmFieldExtensionResponse";
import { TnssetPortsTopicDto } from "../definitions/TnssetPortsTopicDto";
import { TnssetPortsTopicDtoResponse } from "../definitions/TnssetPortsTopicDtoResponse";
import { TnsgetChargingPolicy } from "../definitions/TnsgetChargingPolicy";
import { TnsgetChargingPolicyResponse } from "../definitions/TnsgetChargingPolicyResponse";
import { TnsupdateQuotaRules } from "../definitions/TnsupdateQuotaRules";
import { TnsupdateQuotaRulesResponse } from "../definitions/TnsupdateQuotaRulesResponse";
import { TnsgetAllDmOutputRecords } from "../definitions/TnsgetAllDmOutputRecords";
import { TnsgetAllDmOutputRecordsResponse } from "../definitions/TnsgetAllDmOutputRecordsResponse";
import { TnsgetUserSpecificServiceByName } from "../definitions/TnsgetUserSpecificServiceByName";
import { TnsgetUserSpecificServiceByNameResponse } from "../definitions/TnsgetUserSpecificServiceByNameResponse";
import { TnsgetWebSafeUserByName } from "../definitions/TnsgetWebSafeUserByName";
import { TnsgetWebSafeUserByNameResponse } from "../definitions/TnsgetWebSafeUserByNameResponse";
import { TnsupdateDmOutputProfile } from "../definitions/TnsupdateDmOutputProfile";
import { TnsupdateDmOutputProfileResponse } from "../definitions/TnsupdateDmOutputProfileResponse";
import { TnsgetMonitoredServiceGroupEntriesByIds } from "../definitions/TnsgetMonitoredServiceGroupEntriesByIds";
import { TnsgetMonitoredServiceGroupEntriesByIdsResponse } from "../definitions/TnsgetMonitoredServiceGroupEntriesByIdsResponse";
import { TnsaddChargingApplicationEntries } from "../definitions/TnsaddChargingApplicationEntries";
import { TnsaddChargingApplicationEntriesResponse } from "../definitions/TnsaddChargingApplicationEntriesResponse";
import { TnsgetSmpAttributeTopic } from "../definitions/TnsgetSmpAttributeTopic";
import { TnsgetSmpAttributeTopicResponse } from "../definitions/TnsgetSmpAttributeTopicResponse";
import { TnsgetAllRedundantUnits } from "../definitions/TnsgetAllRedundantUnits";
import { TnsgetAllRedundantUnitsResponse } from "../definitions/TnsgetAllRedundantUnitsResponse";
import { TnsgetMonitoredServiceGroupEntries } from "../definitions/TnsgetMonitoredServiceGroupEntries";
import { TnsgetMonitoredServiceGroupEntriesResponse } from "../definitions/TnsgetMonitoredServiceGroupEntriesResponse";
import { TnsgetTopologyCollector } from "../definitions/TnsgetTopologyCollector";
import { TnsgetTopologyCollectorResponse } from "../definitions/TnsgetTopologyCollectorResponse";
import { TnsgetUserByName } from "../definitions/TnsgetUserByName";
import { TnsgetUserByNameResponse } from "../definitions/TnsgetUserByNameResponse";
import { TnsupdateServiceCatalogEntries } from "../definitions/TnsupdateServiceCatalogEntries";
import { TnsupdateServiceCatalogEntriesResponse } from "../definitions/TnsupdateServiceCatalogEntriesResponse";
import { TnsgetApplicationEntitiesByIds } from "../definitions/TnsgetApplicationEntitiesByIds";
import { TnsgetApplicationEntitiesByIdsResponse } from "../definitions/TnsgetApplicationEntitiesByIdsResponse";
import { TnsgetUserSpecificServiceIdByName } from "../definitions/TnsgetUserSpecificServiceIdByName";
import { TnsgetUserSpecificServiceIdByNameResponse } from "../definitions/TnsgetUserSpecificServiceIdByNameResponse";
import { TnsgetQoeRuleDefIdByName } from "../definitions/TnsgetQoeRuleDefIdByName";
import { TnsgetQoeRuleDefIdByNameResponse } from "../definitions/TnsgetQoeRuleDefIdByNameResponse";
import { TnsgetAutonomousSystemIdByName } from "../definitions/TnsgetAutonomousSystemIdByName";
import { TnsgetAutonomousSystemIdByNameResponse } from "../definitions/TnsgetAutonomousSystemIdByNameResponse";
import { TnsdeleteChargingPlanEntries } from "../definitions/TnsdeleteChargingPlanEntries";
import { TnsdeleteChargingPlanEntriesResponse } from "../definitions/TnsdeleteChargingPlanEntriesResponse";
import { TnsgetAutonomousSystemEntryByName } from "../definitions/TnsgetAutonomousSystemEntryByName";
import { TnsgetAutonomousSystemEntryByNameResponse } from "../definitions/TnsgetAutonomousSystemEntryByNameResponse";
import { TnsgetEventActionEntriesByIds } from "../definitions/TnsgetEventActionEntriesByIds";
import { TnsgetEventActionEntriesByIdsResponse } from "../definitions/TnsgetEventActionEntriesByIdsResponse";
import { TnsgetActionCatalogEntries } from "../definitions/TnsgetActionCatalogEntries";
import { TnsgetActionCatalogEntriesResponse } from "../definitions/TnsgetActionCatalogEntriesResponse";
import { TnsgetMdDeviceByName } from "../definitions/TnsgetMdDeviceByName";
import { TnsgetMdDeviceByNameResponse } from "../definitions/TnsgetMdDeviceByNameResponse";
import { TnsgetHostCatalogEntries } from "../definitions/TnsgetHostCatalogEntries";
import { TnsgetHostCatalogEntriesResponse } from "../definitions/TnsgetHostCatalogEntriesResponse";
import { TnsdeleteHostGroups } from "../definitions/TnsdeleteHostGroups";
import { TnsdeleteHostGroupsResponse } from "../definitions/TnsdeleteHostGroupsResponse";
import { TnsupdateEventActionCatalogEntries } from "../definitions/TnsupdateEventActionCatalogEntries";
import { TnsupdateEventActionCatalogEntriesResponse } from "../definitions/TnsupdateEventActionCatalogEntriesResponse";
import { TnsaddQuotaPlans } from "../definitions/TnsaddQuotaPlans";
import { TnsaddQuotaPlansResponse } from "../definitions/TnsaddQuotaPlansResponse";
import { TnsaddServicePlans } from "../definitions/TnsaddServicePlans";
import { TnsaddServicePlansResponse } from "../definitions/TnsaddServicePlansResponse";
import { TnsdeleteDevice } from "../definitions/TnsdeleteDevice";
import { TnsdeleteDeviceResponse } from "../definitions/TnsdeleteDeviceResponse";
import { TnsgetNppAccountByName } from "../definitions/TnsgetNppAccountByName";
import { TnsgetNppAccountByNameResponse } from "../definitions/TnsgetNppAccountByNameResponse";
import { TnsupdateQuotaCatalogEntries } from "../definitions/TnsupdateQuotaCatalogEntries";
import { TnsupdateQuotaCatalogEntriesResponse } from "../definitions/TnsupdateQuotaCatalogEntriesResponse";
import { TnsgetTubeGroupsByUser } from "../definitions/TnsgetTubeGroupsByUser";
import { TnsgetTubeGroupsByUserResponse } from "../definitions/TnsgetTubeGroupsByUserResponse";
import { TnsupdateServiceGroups } from "../definitions/TnsupdateServiceGroups";
import { TnsupdateServiceGroupsResponse } from "../definitions/TnsupdateServiceGroupsResponse";
import { TnsgetTubesByNames } from "../definitions/TnsgetTubesByNames";
import { TnsgetTubesByNamesResponse } from "../definitions/TnsgetTubesByNamesResponse";
import { TnsdeleteServicePlans } from "../definitions/TnsdeleteServicePlans";
import { TnsdeleteServicePlansResponse } from "../definitions/TnsdeleteServicePlansResponse";
import { TnsgetLicense } from "../definitions/TnsgetLicense";
import { TnsgetLicenseResponse } from "../definitions/TnsgetLicenseResponse";
import { TnsinsertQuotaEvent } from "../definitions/TnsinsertQuotaEvent";
import { TnsinsertQuotaEventResponse } from "../definitions/TnsinsertQuotaEventResponse";
import { TnsupdateIfcPortCatalogEntries } from "../definitions/TnsupdateIfcPortCatalogEntries";
import { TnsupdateIfcPortCatalogEntriesResponse } from "../definitions/TnsupdateIfcPortCatalogEntriesResponse";
import { TnsaddEventActionCatalogEntries } from "../definitions/TnsaddEventActionCatalogEntries";
import { TnsaddEventActionCatalogEntriesResponse } from "../definitions/TnsaddEventActionCatalogEntriesResponse";
import { TnsdeleteChargingApplicationEntries } from "../definitions/TnsdeleteChargingApplicationEntries";
import { TnsdeleteChargingApplicationEntriesResponse } from "../definitions/TnsdeleteChargingApplicationEntriesResponse";
import { Tnspoll } from "../definitions/Tnspoll";
import { TnspollResponse } from "../definitions/TnspollResponse";
import { TnsgetTubeByNames } from "../definitions/TnsgetTubeByNames";
import { TnsgetTubeByNamesResponse } from "../definitions/TnsgetTubeByNamesResponse";
import { TnssetDmProfileEscapeChar } from "../definitions/TnssetDmProfileEscapeChar";
import { TnssetDmProfileEscapeCharResponse } from "../definitions/TnssetDmProfileEscapeCharResponse";
import { TnsupdateDeviceTca } from "../definitions/TnsupdateDeviceTca";
import { TnsupdateDeviceTcaResponse } from "../definitions/TnsupdateDeviceTcaResponse";
import { TnsgetServicePlanIdByName } from "../definitions/TnsgetServicePlanIdByName";
import { TnsgetServicePlanIdByNameResponse } from "../definitions/TnsgetServicePlanIdByNameResponse";
import { TnsaddCocGroupCatalogEntries } from "../definitions/TnsaddCocGroupCatalogEntries";
import { TnsaddCocGroupCatalogEntriesResponse } from "../definitions/TnsaddCocGroupCatalogEntriesResponse";
import { TnsupdateSubnetMapFile } from "../definitions/TnsupdateSubnetMapFile";
import { TnsupdateSubnetMapFileResponse } from "../definitions/TnsupdateSubnetMapFileResponse";
import { TnsgetCocGroupIdByName } from "../definitions/TnsgetCocGroupIdByName";
import { TnsgetCocGroupIdByNameResponse } from "../definitions/TnsgetCocGroupIdByNameResponse";
import { TnsaddUser } from "../definitions/TnsaddUser";
import { TnsaddUserResponse } from "../definitions/TnsaddUserResponse";
import { TnsgetNmsReturnCode } from "../definitions/TnsgetNmsReturnCode";
import { TnsgetNmsReturnCodeResponse } from "../definitions/TnsgetNmsReturnCodeResponse";
import { TnsgetServicePlanAddOnEntries } from "../definitions/TnsgetServicePlanAddOnEntries";
import { TnsgetServicePlanAddOnEntriesResponse } from "../definitions/TnsgetServicePlanAddOnEntriesResponse";
import { TnsupdateCocGroupCatalogEntries } from "../definitions/TnsupdateCocGroupCatalogEntries";
import { TnsupdateCocGroupCatalogEntriesResponse } from "../definitions/TnsupdateCocGroupCatalogEntriesResponse";
import { TnsupdateHostCatalogEntries } from "../definitions/TnsupdateHostCatalogEntries";
import { TnsupdateHostCatalogEntriesResponse } from "../definitions/TnsupdateHostCatalogEntriesResponse";
import { TnscreateFullSetup } from "../definitions/TnscreateFullSetup";
import { TnscreateFullSetupResponse } from "../definitions/TnscreateFullSetupResponse";
import { TnsgetNxLicense } from "../definitions/TnsgetNxLicense";
import { TnsgetNxLicenseResponse } from "../definitions/TnsgetNxLicenseResponse";
import { TnsgetEnterpriseGeneralTopicDto } from "../definitions/TnsgetEnterpriseGeneralTopicDto";
import { TnsgetEnterpriseGeneralTopicDtoResponse } from "../definitions/TnsgetEnterpriseGeneralTopicDtoResponse";
import { TnsgetContentKeyLocalId } from "../definitions/TnsgetContentKeyLocalId";
import { TnsgetContentKeyLocalIdResponse } from "../definitions/TnsgetContentKeyLocalIdResponse";
import { TnssendGenericEvent } from "../definitions/TnssendGenericEvent";
import { TnssendGenericEventResponse } from "../definitions/TnssendGenericEventResponse";
import { TnssetNetAwarenessTopic } from "../definitions/TnssetNetAwarenessTopic";
import { TnssetNetAwarenessTopicResponse } from "../definitions/TnssetNetAwarenessTopicResponse";
import { TnsgetTubeGroupsByIds } from "../definitions/TnsgetTubeGroupsByIds";
import { TnsgetTubeGroupsByIdsResponse } from "../definitions/TnsgetTubeGroupsByIdsResponse";
import { TnsgetGroupByName } from "../definitions/TnsgetGroupByName";
import { TnsgetGroupByNameResponse } from "../definitions/TnsgetGroupByNameResponse";
import { TnscheckRedundantUnits } from "../definitions/TnscheckRedundantUnits";
import { TnscheckRedundantUnitsResponse } from "../definitions/TnscheckRedundantUnitsResponse";
import { TnsupdateIfcGroupCatalogEntries } from "../definitions/TnsupdateIfcGroupCatalogEntries";
import { TnsupdateIfcGroupCatalogEntriesResponse } from "../definitions/TnsupdateIfcGroupCatalogEntriesResponse";
import { TnsgetServiceCatalogEntries } from "../definitions/TnsgetServiceCatalogEntries";
import { TnsgetServiceCatalogEntriesResponse } from "../definitions/TnsgetServiceCatalogEntriesResponse";
import { TnsgetNetAwarenessTopic } from "../definitions/TnsgetNetAwarenessTopic";
import { TnsgetNetAwarenessTopicResponse } from "../definitions/TnsgetNetAwarenessTopicResponse";
import { TnsisNxFeatureEnabled } from "../definitions/TnsisNxFeatureEnabled";
import { TnsisNxFeatureEnabledResponse } from "../definitions/TnsisNxFeatureEnabledResponse";
import { TnsupdateGreCatalogEntries } from "../definitions/TnsupdateGreCatalogEntries";
import { TnsupdateGreCatalogEntriesResponse } from "../definitions/TnsupdateGreCatalogEntriesResponse";
import { TnsgetDeviceById } from "../definitions/TnsgetDeviceById";
import { TnsgetDeviceByIdResponse } from "../definitions/TnsgetDeviceByIdResponse";
import { TnsgetRoutingMapIdByNameFromDefaultNetworkDomain } from "../definitions/TnsgetRoutingMapIdByNameFromDefaultNetworkDomain";
import { TnsgetRoutingMapIdByNameFromDefaultNetworkDomainResponse } from "../definitions/TnsgetRoutingMapIdByNameFromDefaultNetworkDomainResponse";
import { TnsgetServiceCatLocalIdByName } from "../definitions/TnsgetServiceCatLocalIdByName";
import { TnsgetServiceCatLocalIdByNameResponse } from "../definitions/TnsgetServiceCatLocalIdByNameResponse";
import { TnsaddDevice } from "../definitions/TnsaddDevice";
import { TnsaddDeviceResponse } from "../definitions/TnsaddDeviceResponse";
import { TnsgetPolicyDistributionGroupByName } from "../definitions/TnsgetPolicyDistributionGroupByName";
import { TnsgetPolicyDistributionGroupByNameResponse } from "../definitions/TnsgetPolicyDistributionGroupByNameResponse";
import { TnsaddMonitoredServiceGroupEntries } from "../definitions/TnsaddMonitoredServiceGroupEntries";
import { TnsaddMonitoredServiceGroupEntriesResponse } from "../definitions/TnsaddMonitoredServiceGroupEntriesResponse";
import { TnsgetQuotaEvents } from "../definitions/TnsgetQuotaEvents";
import { TnsgetQuotaEventsResponse } from "../definitions/TnsgetQuotaEventsResponse";
import { TnssetEnterpriseExternalServerTopicDto } from "../definitions/TnssetEnterpriseExternalServerTopicDto";
import { TnssetEnterpriseExternalServerTopicDtoResponse } from "../definitions/TnssetEnterpriseExternalServerTopicDtoResponse";
import { TnsaddHostGroups } from "../definitions/TnsaddHostGroups";
import { TnsaddHostGroupsResponse } from "../definitions/TnsaddHostGroupsResponse";
import { TnsgetServicePlanByName } from "../definitions/TnsgetServicePlanByName";
import { TnsgetServicePlanByNameResponse } from "../definitions/TnsgetServicePlanByNameResponse";
import { TnsgetIfcGroupIdByName } from "../definitions/TnsgetIfcGroupIdByName";
import { TnsgetIfcGroupIdByNameResponse } from "../definitions/TnsgetIfcGroupIdByNameResponse";
import { TnsaddDosCatalogEntries } from "../definitions/TnsaddDosCatalogEntries";
import { TnsaddDosCatalogEntriesResponse } from "../definitions/TnsaddDosCatalogEntriesResponse";
import { TnsdeleteBiHaGroup } from "../definitions/TnsdeleteBiHaGroup";
import { TnsdeleteBiHaGroupResponse } from "../definitions/TnsdeleteBiHaGroupResponse";
import { TnsaddApplicationEntities } from "../definitions/TnsaddApplicationEntities";
import { TnsaddApplicationEntitiesResponse } from "../definitions/TnsaddApplicationEntitiesResponse";
import { TnsgetAsymGroups } from "../definitions/TnsgetAsymGroups";
import { TnsgetAsymGroupsResponse } from "../definitions/TnsgetAsymGroupsResponse";
import { TnsgetChargingApp2ServiceEntities } from "../definitions/TnsgetChargingApp2ServiceEntities";
import { TnsgetChargingApp2ServiceEntitiesResponse } from "../definitions/TnsgetChargingApp2ServiceEntitiesResponse";
import { TnsgetTubeDto } from "../definitions/TnsgetTubeDto";
import { TnsgetTubeDtoResponse } from "../definitions/TnsgetTubeDtoResponse";
import { TnsaddWorkServer } from "../definitions/TnsaddWorkServer";
import { TnsaddWorkServerResponse } from "../definitions/TnsaddWorkServerResponse";
import { TnsgetGreGroupCatalogEntries } from "../definitions/TnsgetGreGroupCatalogEntries";
import { TnsgetGreGroupCatalogEntriesResponse } from "../definitions/TnsgetGreGroupCatalogEntriesResponse";
import { TnsaddSmpGroup } from "../definitions/TnsaddSmpGroup";
import { TnsaddSmpGroupResponse } from "../definitions/TnsaddSmpGroupResponse";
import { TnsdeleteChargingRule } from "../definitions/TnsdeleteChargingRule";
import { TnsdeleteChargingRuleResponse } from "../definitions/TnsdeleteChargingRuleResponse";
import { TnsgetTimeEntriesByIds } from "../definitions/TnsgetTimeEntriesByIds";
import { TnsgetTimeEntriesByIdsResponse } from "../definitions/TnsgetTimeEntriesByIdsResponse";
import { TnsgetDosEntriesByIds } from "../definitions/TnsgetDosEntriesByIds";
import { TnsgetDosEntriesByIdsResponse } from "../definitions/TnsgetDosEntriesByIdsResponse";
import { TnsupdateWuDevice } from "../definitions/TnsupdateWuDevice";
import { TnsupdateWuDeviceResponse } from "../definitions/TnsupdateWuDeviceResponse";
import { TnsdeleteMonitoredServiceGroupEntries } from "../definitions/TnsdeleteMonitoredServiceGroupEntries";
import { TnsdeleteMonitoredServiceGroupEntriesResponse } from "../definitions/TnsdeleteMonitoredServiceGroupEntriesResponse";
import { TnsgetVlanGroupCatalogEntries } from "../definitions/TnsgetVlanGroupCatalogEntries";
import { TnsgetVlanGroupCatalogEntriesResponse } from "../definitions/TnsgetVlanGroupCatalogEntriesResponse";
import { TnsaddClientDeviceGroupEntries } from "../definitions/TnsaddClientDeviceGroupEntries";
import { TnsaddClientDeviceGroupEntriesResponse } from "../definitions/TnsaddClientDeviceGroupEntriesResponse";
import { TnsupdateHheCatalogEntries } from "../definitions/TnsupdateHheCatalogEntries";
import { TnsupdateHheCatalogEntriesResponse } from "../definitions/TnsupdateHheCatalogEntriesResponse";
import { TnsaddCocCatalogEntries } from "../definitions/TnsaddCocCatalogEntries";
import { TnsaddCocCatalogEntriesResponse } from "../definitions/TnsaddCocCatalogEntriesResponse";
import { TnsgetPipes } from "../definitions/TnsgetPipes";
import { TnsgetPipesResponse } from "../definitions/TnsgetPipesResponse";
import { TnsrevertMonitoredServiceMembersToDefault } from "../definitions/TnsrevertMonitoredServiceMembersToDefault";
import { TnsrevertMonitoredServiceMembersToDefaultResponse } from "../definitions/TnsrevertMonitoredServiceMembersToDefaultResponse";
import { TnsexportPolicy1 } from "../definitions/TnsexportPolicy1";
import { TnsexportPolicy1Response } from "../definitions/TnsexportPolicy1Response";
import { TnssetEnterpriseCsTopicDto } from "../definitions/TnssetEnterpriseCsTopicDto";
import { TnssetEnterpriseCsTopicDtoResponse } from "../definitions/TnssetEnterpriseCsTopicDtoResponse";
import { TnsgetIfcGroupEntriesByIds } from "../definitions/TnsgetIfcGroupEntriesByIds";
import { TnsgetIfcGroupEntriesByIdsResponse } from "../definitions/TnsgetIfcGroupEntriesByIdsResponse";
import { TnsaddMdDevice } from "../definitions/TnsaddMdDevice";
import { TnsaddMdDeviceResponse } from "../definitions/TnsaddMdDeviceResponse";
import { TnsgetChargingApplicationEntries } from "../definitions/TnsgetChargingApplicationEntries";
import { TnsgetChargingApplicationEntriesResponse } from "../definitions/TnsgetChargingApplicationEntriesResponse";
import { TnsgetControlPlaneIdentifierNames } from "../definitions/TnsgetControlPlaneIdentifierNames";
import { TnsgetControlPlaneIdentifierNamesResponse } from "../definitions/TnsgetControlPlaneIdentifierNamesResponse";
import { TnsdeleteQuotaCatalogEntries } from "../definitions/TnsdeleteQuotaCatalogEntries";
import { TnsdeleteQuotaCatalogEntriesResponse } from "../definitions/TnsdeleteQuotaCatalogEntriesResponse";
import { TnsgetTimeCatalogEntries } from "../definitions/TnsgetTimeCatalogEntries";
import { TnsgetTimeCatalogEntriesResponse } from "../definitions/TnsgetTimeCatalogEntriesResponse";
import { TnssetEnterpriseSnmpTopicDto } from "../definitions/TnssetEnterpriseSnmpTopicDto";
import { TnssetEnterpriseSnmpTopicDtoResponse } from "../definitions/TnssetEnterpriseSnmpTopicDtoResponse";
import { TnsgetAllTopologyCollectors } from "../definitions/TnsgetAllTopologyCollectors";
import { TnsgetAllTopologyCollectorsResponse } from "../definitions/TnsgetAllTopologyCollectorsResponse";
import { TnsgetDmFieldExtension } from "../definitions/TnsgetDmFieldExtension";
import { TnsgetDmFieldExtensionResponse } from "../definitions/TnsgetDmFieldExtensionResponse";
import { TnsdeleteCocCatalogEntries } from "../definitions/TnsdeleteCocCatalogEntries";
import { TnsdeleteCocCatalogEntriesResponse } from "../definitions/TnsdeleteCocCatalogEntriesResponse";
import { TnsgetServiceIdByName } from "../definitions/TnsgetServiceIdByName";
import { TnsgetServiceIdByNameResponse } from "../definitions/TnsgetServiceIdByNameResponse";
import { TnsgetVlanIdByName } from "../definitions/TnsgetVlanIdByName";
import { TnsgetVlanIdByNameResponse } from "../definitions/TnsgetVlanIdByNameResponse";
import { TnsupdateUser } from "../definitions/TnsupdateUser";
import { TnsupdateUserResponse } from "../definitions/TnsupdateUserResponse";
import { TnsaddNetworkDomains } from "../definitions/TnsaddNetworkDomains";
import { TnsaddNetworkDomainsResponse } from "../definitions/TnsaddNetworkDomainsResponse";
import { TnsgetAlertCounterEntriesByOIds } from "../definitions/TnsgetAlertCounterEntriesByOIds";
import { TnsgetAlertCounterEntriesByOIdsResponse } from "../definitions/TnsgetAlertCounterEntriesByOIdsResponse";
import { TnsgetHheEntriesByIds } from "../definitions/TnsgetHheEntriesByIds";
import { TnsgetHheEntriesByIdsResponse } from "../definitions/TnsgetHheEntriesByIdsResponse";
import { TnsgetGreCatalogEntries } from "../definitions/TnsgetGreCatalogEntries";
import { TnsgetGreCatalogEntriesResponse } from "../definitions/TnsgetGreCatalogEntriesResponse";
import { TnsgetQuotaRules } from "../definitions/TnsgetQuotaRules";
import { TnsgetQuotaRulesResponse } from "../definitions/TnsgetQuotaRulesResponse";
import { TnsgetHostGroups } from "../definitions/TnsgetHostGroups";
import { TnsgetHostGroupsResponse } from "../definitions/TnsgetHostGroupsResponse";
import { TnsaddSmpRadiusTargets } from "../definitions/TnsaddSmpRadiusTargets";
import { TnsaddSmpRadiusTargetsResponse } from "../definitions/TnsaddSmpRadiusTargetsResponse";
import { TnsupdateChargingApplicationEntries } from "../definitions/TnsupdateChargingApplicationEntries";
import { TnsupdateChargingApplicationEntriesResponse } from "../definitions/TnsupdateChargingApplicationEntriesResponse";
import { TnsdeleteTimeCatalogEntries } from "../definitions/TnsdeleteTimeCatalogEntries";
import { TnsdeleteTimeCatalogEntriesResponse } from "../definitions/TnsdeleteTimeCatalogEntriesResponse";
import { TnsgetInputFilteringRuleListFromXml } from "../definitions/TnsgetInputFilteringRuleListFromXml";
import { TnsgetInputFilteringRuleListFromXmlResponse } from "../definitions/TnsgetInputFilteringRuleListFromXmlResponse";
import { TnsaddServicePlanAddOnEntries } from "../definitions/TnsaddServicePlanAddOnEntries";
import { TnsaddServicePlanAddOnEntriesResponse } from "../definitions/TnsaddServicePlanAddOnEntriesResponse";
import { TnsgetVsEntriesByIds } from "../definitions/TnsgetVsEntriesByIds";
import { TnsgetVsEntriesByIdsResponse } from "../definitions/TnsgetVsEntriesByIdsResponse";
import { TnsresolveCatalogNames } from "../definitions/TnsresolveCatalogNames";
import { TnsresolveCatalogNamesResponse } from "../definitions/TnsresolveCatalogNamesResponse";
import { TnsgetAlertCatalogEntries } from "../definitions/TnsgetAlertCatalogEntries";
import { TnsgetAlertCatalogEntriesResponse } from "../definitions/TnsgetAlertCatalogEntriesResponse";
import { TnsupdateHostGroups } from "../definitions/TnsupdateHostGroups";
import { TnsupdateHostGroupsResponse } from "../definitions/TnsupdateHostGroupsResponse";
import { TnsupdateDeployedFacebookRevision } from "../definitions/TnsupdateDeployedFacebookRevision";
import { TnsupdateDeployedFacebookRevisionResponse } from "../definitions/TnsupdateDeployedFacebookRevisionResponse";
import { TnsaddCountryClassification } from "../definitions/TnsaddCountryClassification";
import { TnsaddCountryClassificationResponse } from "../definitions/TnsaddCountryClassificationResponse";
import { TnsgetCocEntriesByIds } from "../definitions/TnsgetCocEntriesByIds";
import { TnsgetCocEntriesByIdsResponse } from "../definitions/TnsgetCocEntriesByIdsResponse";
import { TnsaddHostCatalogEntries } from "../definitions/TnsaddHostCatalogEntries";
import { TnsaddHostCatalogEntriesResponse } from "../definitions/TnsaddHostCatalogEntriesResponse";
import { TnsgetEnterpriseExternalServerTopicDto } from "../definitions/TnsgetEnterpriseExternalServerTopicDto";
import { TnsgetEnterpriseExternalServerTopicDtoResponse } from "../definitions/TnsgetEnterpriseExternalServerTopicDtoResponse";
import { TnssendAsGeoBackupEvent } from "../definitions/TnssendAsGeoBackupEvent";
import { TnssendAsGeoBackupEventResponse } from "../definitions/TnssendAsGeoBackupEventResponse";
import { TnsdeleteAutonomousSystemEntries } from "../definitions/TnsdeleteAutonomousSystemEntries";
import { TnsdeleteAutonomousSystemEntriesResponse } from "../definitions/TnsdeleteAutonomousSystemEntriesResponse";
import { TnsupdateDmOutputRecord } from "../definitions/TnsupdateDmOutputRecord";
import { TnsupdateDmOutputRecordResponse } from "../definitions/TnsupdateDmOutputRecordResponse";
import { TnsupdateServicePlans } from "../definitions/TnsupdateServicePlans";
import { TnsupdateServicePlansResponse } from "../definitions/TnsupdateServicePlansResponse";
import { TnsdeleteWorkServer } from "../definitions/TnsdeleteWorkServer";
import { TnsdeleteWorkServerResponse } from "../definitions/TnsdeleteWorkServerResponse";
import { TnsgetPolicy } from "../definitions/TnsgetPolicy";
import { TnsgetPolicyResponse } from "../definitions/TnsgetPolicyResponse";
import { TnsgetEnterpriseAddedServicesTopicDto } from "../definitions/TnsgetEnterpriseAddedServicesTopicDto";
import { TnsgetEnterpriseAddedServicesTopicDtoResponse } from "../definitions/TnsgetEnterpriseAddedServicesTopicDtoResponse";
import { TnsgetServicePlansByIds } from "../definitions/TnsgetServicePlansByIds";
import { TnsgetServicePlansByIdsResponse } from "../definitions/TnsgetServicePlansByIdsResponse";
import { TnsgetPorts } from "../definitions/TnsgetPorts";
import { TnsgetPortsResponse } from "../definitions/TnsgetPortsResponse";
import { TnsdeleteVlanGroupCatalogEntries } from "../definitions/TnsdeleteVlanGroupCatalogEntries";
import { TnsdeleteVlanGroupCatalogEntriesResponse } from "../definitions/TnsdeleteVlanGroupCatalogEntriesResponse";
import { TnsrevertServiceEntryToDefault } from "../definitions/TnsrevertServiceEntryToDefault";
import { TnsrevertServiceEntryToDefaultResponse } from "../definitions/TnsrevertServiceEntryToDefaultResponse";
import { TnsgetServicePlans } from "../definitions/TnsgetServicePlans";
import { TnsgetServicePlansResponse } from "../definitions/TnsgetServicePlansResponse";
import { TnsgetGreEntriesByIds } from "../definitions/TnsgetGreEntriesByIds";
import { TnsgetGreEntriesByIdsResponse } from "../definitions/TnsgetGreEntriesByIdsResponse";
import { TnsgetVlanGroupEntriesByIds } from "../definitions/TnsgetVlanGroupEntriesByIds";
import { TnsgetVlanGroupEntriesByIdsResponse } from "../definitions/TnsgetVlanGroupEntriesByIdsResponse";
import { TnsmodifyTopologyCollector } from "../definitions/TnsmodifyTopologyCollector";
import { TnsmodifyTopologyCollectorResponse } from "../definitions/TnsmodifyTopologyCollectorResponse";
import { TnsgetAllDmOutputProfileEntities } from "../definitions/TnsgetAllDmOutputProfileEntities";
import { TnsgetAllDmOutputProfileEntitiesResponse } from "../definitions/TnsgetAllDmOutputProfileEntitiesResponse";
import { TnsupdateAllChargingRuleForCost } from "../definitions/TnsupdateAllChargingRuleForCost";
import { TnsupdateAllChargingRuleForCostResponse } from "../definitions/TnsupdateAllChargingRuleForCostResponse";
import { TnsaddWebSafeUser } from "../definitions/TnsaddWebSafeUser";
import { TnsaddWebSafeUserResponse } from "../definitions/TnsaddWebSafeUserResponse";
import { TnsgetIfcPortIdByName } from "../definitions/TnsgetIfcPortIdByName";
import { TnsgetIfcPortIdByNameResponse } from "../definitions/TnsgetIfcPortIdByNameResponse";
import { TnsgetAllAutonomousSystemEntries } from "../definitions/TnsgetAllAutonomousSystemEntries";
import { TnsgetAllAutonomousSystemEntriesResponse } from "../definitions/TnsgetAllAutonomousSystemEntriesResponse";
import { TnsgetDeviceTcAs } from "../definitions/TnsgetDeviceTcAs";
import { TnsgetDeviceTcAsResponse } from "../definitions/TnsgetDeviceTcAsResponse";
import { TnsmodifySnmpV3UserData } from "../definitions/TnsmodifySnmpV3UserData";
import { TnsmodifySnmpV3UserDataResponse } from "../definitions/TnsmodifySnmpV3UserDataResponse";
import { TnsgetVlanEntriesByIds } from "../definitions/TnsgetVlanEntriesByIds";
import { TnsgetVlanEntriesByIdsResponse } from "../definitions/TnsgetVlanEntriesByIdsResponse";
import { TnsgetAllWorkServer } from "../definitions/TnsgetAllWorkServer";
import { TnsgetAllWorkServerResponse } from "../definitions/TnsgetAllWorkServerResponse";
import { TnsaddSubscribers } from "../definitions/TnsaddSubscribers";
import { TnsaddSubscribersResponse } from "../definitions/TnsaddSubscribersResponse";
import { TnsdeleteDosCatalogEntries } from "../definitions/TnsdeleteDosCatalogEntries";
import { TnsdeleteDosCatalogEntriesResponse } from "../definitions/TnsdeleteDosCatalogEntriesResponse";
import { TnsgetServiceEntriesByIds } from "../definitions/TnsgetServiceEntriesByIds";
import { TnsgetServiceEntriesByIdsResponse } from "../definitions/TnsgetServiceEntriesByIdsResponse";
import { TnssetSyslogConnections } from "../definitions/TnssetSyslogConnections";
import { TnssetSyslogConnectionsResponse } from "../definitions/TnssetSyslogConnectionsResponse";
import { TnsgetServicesByNames } from "../definitions/TnsgetServicesByNames";
import { TnsgetServicesByNamesResponse } from "../definitions/TnsgetServicesByNamesResponse";
import { TnsupdateMonitoredServiceGroupEntries } from "../definitions/TnsupdateMonitoredServiceGroupEntries";
import { TnsupdateMonitoredServiceGroupEntriesResponse } from "../definitions/TnsupdateMonitoredServiceGroupEntriesResponse";
import { TnsgetChargingApp2ServiceEntitiesByName } from "../definitions/TnsgetChargingApp2ServiceEntitiesByName";
import { TnsgetChargingApp2ServiceEntitiesByNameResponse } from "../definitions/TnsgetChargingApp2ServiceEntitiesByNameResponse";
import { TnsaddGreCatalogEntries } from "../definitions/TnsaddGreCatalogEntries";
import { TnsaddGreCatalogEntriesResponse } from "../definitions/TnsaddGreCatalogEntriesResponse";
import { TnsgetCmtsIdByName } from "../definitions/TnsgetCmtsIdByName";
import { TnsgetCmtsIdByNameResponse } from "../definitions/TnsgetCmtsIdByNameResponse";
import { TnssetSyslogEnabled } from "../definitions/TnssetSyslogEnabled";
import { TnssetSyslogEnabledResponse } from "../definitions/TnssetSyslogEnabledResponse";
import { TnsassignSmpRouterToSmpGroup } from "../definitions/TnsassignSmpRouterToSmpGroup";
import { TnsassignSmpRouterToSmpGroupResponse } from "../definitions/TnsassignSmpRouterToSmpGroupResponse";
import { TnssetEnterpriseServersTopicDto } from "../definitions/TnssetEnterpriseServersTopicDto";
import { TnssetEnterpriseServersTopicDtoResponse } from "../definitions/TnssetEnterpriseServersTopicDtoResponse";
import { TnsgetDosIdByName } from "../definitions/TnsgetDosIdByName";
import { TnsgetDosIdByNameResponse } from "../definitions/TnsgetDosIdByNameResponse";
import { TnsaddQuotaRules } from "../definitions/TnsaddQuotaRules";
import { TnsaddQuotaRulesResponse } from "../definitions/TnsaddQuotaRulesResponse";
import { TnsupdateChargingRule } from "../definitions/TnsupdateChargingRule";
import { TnsupdateChargingRuleResponse } from "../definitions/TnsupdateChargingRuleResponse";
import { TnsdeleteClientDeviceGroupEntries } from "../definitions/TnsdeleteClientDeviceGroupEntries";
import { TnsdeleteClientDeviceGroupEntriesResponse } from "../definitions/TnsdeleteClientDeviceGroupEntriesResponse";
import { TnsgetTimeIdByName } from "../definitions/TnsgetTimeIdByName";
import { TnsgetTimeIdByNameResponse } from "../definitions/TnsgetTimeIdByNameResponse";
import { TnsupdateChargingPlanEntries } from "../definitions/TnsupdateChargingPlanEntries";
import { TnsupdateChargingPlanEntriesResponse } from "../definitions/TnsupdateChargingPlanEntriesResponse";
import { TnsgetIfcPortEntriesByIds } from "../definitions/TnsgetIfcPortEntriesByIds";
import { TnsgetIfcPortEntriesByIdsResponse } from "../definitions/TnsgetIfcPortEntriesByIdsResponse";
import { TnsgetDmInputFilteringRileListXml } from "../definitions/TnsgetDmInputFilteringRileListXml";
import { TnsgetDmInputFilteringRileListXmlResponse } from "../definitions/TnsgetDmInputFilteringRileListXmlResponse";
import { TnsaddChargingPlanEntries } from "../definitions/TnsaddChargingPlanEntries";
import { TnsaddChargingPlanEntriesResponse } from "../definitions/TnsaddChargingPlanEntriesResponse";
import { TnsexportDefaultPolicy } from "../definitions/TnsexportDefaultPolicy";
import { TnsexportDefaultPolicyResponse } from "../definitions/TnsexportDefaultPolicyResponse";
import { TnsdeleteServiceGroups } from "../definitions/TnsdeleteServiceGroups";
import { TnsdeleteServiceGroupsResponse } from "../definitions/TnsdeleteServiceGroupsResponse";
import { TnsgetFullTubeDto } from "../definitions/TnsgetFullTubeDto";
import { TnsgetFullTubeDtoResponse } from "../definitions/TnsgetFullTubeDtoResponse";
import { TnsgetVsCatalogEntries } from "../definitions/TnsgetVsCatalogEntries";
import { TnsgetVsCatalogEntriesResponse } from "../definitions/TnsgetVsCatalogEntriesResponse";

export interface WsNxServicesPort {
    getAllCollectors(getAllCollectors: TnsgetAllCollectors, callback: (err: any, result: TnsgetAllCollectorsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    importDevice(importDevice: TnsimportDevice, callback: (err: any, result: TnsimportDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServiceGroupsByIds(getServiceGroupsByIds: TnsgetServiceGroupsByIds, callback: (err: any, result: TnsgetServiceGroupsByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteVsCatalogEntries(deleteVsCatalogEntries: TnsdeleteVsCatalogEntries, callback: (err: any, result: TnsdeleteVsCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDosCatalogEntries(getDosCatalogEntries: TnsgetDosCatalogEntries, callback: (err: any, result: TnsgetDosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getNextAsymGroupId(getNextAsymGroupId: TnsgetNextAsymGroupId, callback: (err: any, result: TnsgetNextAsymGroupIdResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getVsIdByName(getVsIdByName: TnsgetVsIdByName, callback: (err: any, result: TnsgetVsIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteUser(deleteUser: TnsdeleteUser, callback: (err: any, result: TnsdeleteUserResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addIfcPortCatalogEntries(addIfcPortCatalogEntries: TnsaddIfcPortCatalogEntries, callback: (err: any, result: TnsaddIfcPortCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getClientDeviceGroupEntries(getClientDeviceGroupEntries: TnsgetClientDeviceGroupEntries, callback: (err: any, result: TnsgetClientDeviceGroupEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    revertAllServiceGroupsToDefault(revertAllServiceGroupsToDefault: TnsrevertAllServiceGroupsToDefault, callback: (err: any, result: TnsrevertAllServiceGroupsToDefaultResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    saveWhiteList(saveWhiteList: TnssaveWhiteList, callback: (err: any, result: TnssaveWhiteListResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    installUpdatesFromLocalDisk(installUpdatesFromLocalDisk: TnsinstallUpdatesFromLocalDisk, callback: (err: any, result: TnsinstallUpdatesFromLocalDiskResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllChargingConditions2SPByPolicy(getAllChargingConditions2SpByPolicy: TnsgetAllChargingConditions2SpByPolicy, callback: (err: any, result: TnsgetAllChargingConditions2SpByPolicyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAlertEntriesByIds(getAlertEntriesByIds: TnsgetAlertEntriesByIds, callback: (err: any, result: TnsgetAlertEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateClientDeviceGroupEntries(updateClientDeviceGroupEntries: TnsupdateClientDeviceGroupEntries, callback: (err: any, result: TnsupdateClientDeviceGroupEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDMOutputRecordByName(getDmOutputRecordByName: TnsgetDmOutputRecordByName, callback: (err: any, result: TnsgetDmOutputRecordByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServiceGroupIdByName(getServiceGroupIdByName: TnsgetServiceGroupIdByName, callback: (err: any, result: TnsgetServiceGroupIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteGreCatalogEntries(deleteGreCatalogEntries: TnsdeleteGreCatalogEntries, callback: (err: any, result: TnsdeleteGreCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getClientDeviceGroupIdByName(getClientDeviceGroupIdByName: TnsgetClientDeviceGroupIdByName, callback: (err: any, result: TnsgetClientDeviceGroupIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getContentValueID(getContentValueId: TnsgetContentValueId, callback: (err: any, result: TnsgetContentValueIdResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDmInputFilteringRuleEntity(getDmInputFilteringRuleEntity: TnsgetDmInputFilteringRuleEntity, callback: (err: any, result: TnsgetDmInputFilteringRuleEntityResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteTubeGroups(deleteTubeGroups: TnsdeleteTubeGroups, callback: (err: any, result: TnsdeleteTubeGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    removeAndSetDeviceConfiguration(removeAndSetDeviceConfiguration: TnsremoveAndSetDeviceConfiguration, callback: (err: any, result: TnsremoveAndSetDeviceConfigurationResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateTubesQos(updateTubesQos: TnsupdateTubesQos, callback: (err: any, result: TnsupdateTubesQosResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getUsers(getUsers: TnsgetUsers, callback: (err: any, result: TnsgetUsersResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getSmpTopic(getSmpTopic: TnsgetSmpTopic, callback: (err: any, result: TnsgetSmpTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getWebSafeAuthenticatedUser(getWebSafeAuthenticatedUser: TnsgetWebSafeAuthenticatedUser, callback: (err: any, result: TnsgetWebSafeAuthenticatedUserResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateSubscriberIdFromSmf(updateSubscriberIdFromSmf: TnsupdateSubscriberIdFromSmf, callback: (err: any, result: TnsupdateSubscriberIdFromSmfResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDmEncryptionKey(getDmEncryptionKey: TnsgetDmEncryptionKey, callback: (err: any, result: TnsgetDmEncryptionKeyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getClientDeviceEntriesByIds(getClientDeviceEntriesByIds: TnsgetClientDeviceEntriesByIds, callback: (err: any, result: TnsgetClientDeviceEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getGreGroupEntriesByIds(getGreGroupEntriesByIds: TnsgetGreGroupEntriesByIds, callback: (err: any, result: TnsgetGreGroupEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    revertAllMonitoredServiceGroupToDefault(revertAllMonitoredServiceGroupToDefault: TnsrevertAllMonitoredServiceGroupToDefault, callback: (err: any, result: TnsrevertAllMonitoredServiceGroupToDefaultResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getWhiteList(getWhiteList: TnsgetWhiteList, callback: (err: any, result: TnsgetWhiteListResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getRedirectInterfacesByDeviceId(getRedirectInterfacesByDeviceId: TnsgetRedirectInterfacesByDeviceId, callback: (err: any, result: TnsgetRedirectInterfacesByDeviceIdResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateWebSafeUser(updateWebSafeUser: TnsupdateWebSafeUser, callback: (err: any, result: TnsupdateWebSafeUserResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setSmpTopic(setSmpTopic: TnssetSmpTopic, callback: (err: any, result: TnssetSmpTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getSyslogEnabled(getSyslogEnabled: TnsgetSyslogEnabled, callback: (err: any, result: TnsgetSyslogEnabledResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQuotaEntriesByIds(getQuotaEntriesByIds: TnsgetQuotaEntriesByIds, callback: (err: any, result: TnsgetQuotaEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteApplicationEntities(deleteApplicationEntities: TnsdeleteApplicationEntities, callback: (err: any, result: TnsdeleteApplicationEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDeviceCOCTopic(getDeviceCocTopic: TnsgetDeviceCocTopic, callback: (err: any, result: TnsgetDeviceCocTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQuotaPlansByIds(getQuotaPlansByIds: TnsgetQuotaPlansByIds, callback: (err: any, result: TnsgetQuotaPlansByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteNetworkDomains(deleteNetworkDomains: TnsdeleteNetworkDomains, callback: (err: any, result: TnsdeleteNetworkDomainsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteGroups(deleteGroups: TnsdeleteGroups, callback: (err: any, result: TnsdeleteGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteQoeRuleDefCatalogEntries(deleteQoeRuleDefCatalogEntries: TnsdeleteQoeRuleDefCatalogEntries, callback: (err: any, result: TnsdeleteQoeRuleDefCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getByName(getByName: TnsgetByName, callback: (err: any, result: TnsgetByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingPlan2AppEntities(getChargingPlan2AppEntities: TnsgetChargingPlan2AppEntities, callback: (err: any, result: TnsgetChargingPlan2AppEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingApplicationEntityByName(getChargingApplicationEntityByName: TnsgetChargingApplicationEntityByName, callback: (err: any, result: TnsgetChargingApplicationEntityByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getSmpRadiusTargets(getSmpRadiusTargets: TnsgetSmpRadiusTargets, callback: (err: any, result: TnsgetSmpRadiusTargetsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setDataExportConfig(setDataExportConfig: TnssetDataExportConfig, callback: (err: any, result: TnssetDataExportConfigResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getCocCatalogEntries(getCocCatalogEntries: TnsgetCocCatalogEntries, callback: (err: any, result: TnsgetCocCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHostGroupIdByName(getHostGroupIdByName: TnsgetHostGroupIdByName, callback: (err: any, result: TnsgetHostGroupIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addSubscriberId(addSubscriberId: TnsaddSubscriberId, callback: (err: any, result: TnsaddSubscriberIdResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteVlanCatalogEntries(deleteVlanCatalogEntries: TnsdeleteVlanCatalogEntries, callback: (err: any, result: TnsdeleteVlanCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getClientDeviceEntries(getClientDeviceEntries: TnsgetClientDeviceEntries, callback: (err: any, result: TnsgetClientDeviceEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getSubscriberInstances(getSubscriberInstances: TnsgetSubscriberInstances, callback: (err: any, result: TnsgetSubscriberInstancesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getCmtasReportStatus(getCmtasReportStatus: TnsgetCmtasReportStatus, callback: (err: any, result: TnsgetCmtasReportStatusResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getWebSafeUsers(getWebSafeUsers: TnsgetWebSafeUsers, callback: (err: any, result: TnsgetWebSafeUsersResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getVcs(getVcs: TnsgetVcs, callback: (err: any, result: TnsgetVcsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setEnterpriseAddedServicesTopicDTO(setEnterpriseAddedServicesTopicDto: TnssetEnterpriseAddedServicesTopicDto, callback: (err: any, result: TnssetEnterpriseAddedServicesTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getRedundantUnitByDevice(getRedundantUnitByDevice: TnsgetRedundantUnitByDevice, callback: (err: any, result: TnsgetRedundantUnitByDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addServiceGroups(addServiceGroups: TnsaddServiceGroups, callback: (err: any, result: TnsaddServiceGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateAlertCatalogEntries(updateAlertCatalogEntries: TnsupdateAlertCatalogEntries, callback: (err: any, result: TnsupdateAlertCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getPolicyDistributionGroups(getPolicyDistributionGroups: TnsgetPolicyDistributionGroups, callback: (err: any, result: TnsgetPolicyDistributionGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDmOutputProfileByTypeAndName(getDmOutputProfileByTypeAndName: TnsgetDmOutputProfileByTypeAndName, callback: (err: any, result: TnsgetDmOutputProfileByTypeAndNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getBlackListCategories(getBlackListCategories: TnsgetBlackListCategories, callback: (err: any, result: TnsgetBlackListCategoriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateNetworkDomains(updateNetworkDomains: TnsupdateNetworkDomains, callback: (err: any, result: TnsupdateNetworkDomainsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQosIdByName(getQosIdByName: TnsgetQosIdByName, callback: (err: any, result: TnsgetQosIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setEnterpriseGeneralTopicDTO(setEnterpriseGeneralTopicDto: TnssetEnterpriseGeneralTopicDto, callback: (err: any, result: TnssetEnterpriseGeneralTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateNppAccount(updateNppAccount: TnsupdateNppAccount, callback: (err: any, result: TnsupdateNppAccountResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateWuServer(updateWuServer: TnsupdateWuServer, callback: (err: any, result: TnsupdateWuServerResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getSecretKey(getSecretKey: TnsgetSecretKey, callback: (err: any, result: TnsgetSecretKeyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateAutonomousSystemEntries(updateAutonomousSystemEntries: TnsupdateAutonomousSystemEntries, callback: (err: any, result: TnsupdateAutonomousSystemEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    exportPolicy(exportPolicy: TnsexportPolicy, callback: (err: any, result: TnsexportPolicyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addVlanCatalogEntries(addVlanCatalogEntries: TnsaddVlanCatalogEntries, callback: (err: any, result: TnsaddVlanCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    removeRtFilters(removeRtFilters: TnsremoveRtFilters, callback: (err: any, result: TnsremoveRtFiltersResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteWebSafeUser(deleteWebSafeUser: TnsdeleteWebSafeUser, callback: (err: any, result: TnsdeleteWebSafeUserResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateFacebookTrafficControlDTO(updateFacebookTrafficControlDto: TnsupdateFacebookTrafficControlDto, callback: (err: any, result: TnsupdateFacebookTrafficControlDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateTubeGroups(updateTubeGroups: TnsupdateTubeGroups, callback: (err: any, result: TnsupdateTubeGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateServicePlanAddOnEntries(updateServicePlanAddOnEntries: TnsupdateServicePlanAddOnEntries, callback: (err: any, result: TnsupdateServicePlanAddOnEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHheIdByName(getHheIdByName: TnsgetHheIdByName, callback: (err: any, result: TnsgetHheIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    isNetAwareness(isNetAwareness: TnsisNetAwareness, callback: (err: any, result: TnsisNetAwarenessResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getVlanGroupIdByName(getVlanGroupIdByName: TnsgetVlanGroupIdByName, callback: (err: any, result: TnsgetVlanGroupIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingPlanEntries(getChargingPlanEntries: TnsgetChargingPlanEntries, callback: (err: any, result: TnsgetChargingPlanEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHostsByNames(getHostsByNames: TnsgetHostsByNames, callback: (err: any, result: TnsgetHostsByNamesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllNeDevice(getAllNeDevice: TnsgetAllNeDevice, callback: (err: any, result: TnsgetAllNeDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    saveControlPlaneIdentifierNames(saveControlPlaneIdentifierNames: TnssaveControlPlaneIdentifierNames, callback: (err: any, result: TnssaveControlPlaneIdentifierNamesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getWebSafeUserIdByName(getWebSafeUserIdByName: TnsgetWebSafeUserIdByName, callback: (err: any, result: TnsgetWebSafeUserIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateQosCatalogEntries(updateQosCatalogEntries: TnsupdateQosCatalogEntries, callback: (err: any, result: TnsupdateQosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateTosCatalogEntries(updateTosCatalogEntries: TnsupdateTosCatalogEntries, callback: (err: any, result: TnsupdateTosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateSmpGroup(updateSmpGroup: TnsupdateSmpGroup, callback: (err: any, result: TnsupdateSmpGroupResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getClientDeviceGroupEntriesByIds(getClientDeviceGroupEntriesByIds: TnsgetClientDeviceGroupEntriesByIds, callback: (err: any, result: TnsgetClientDeviceGroupEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setProxyServer(setProxyServer: TnssetProxyServer, callback: (err: any, result: TnssetProxyServerResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHostGroupByIds(getHostGroupByIds: TnsgetHostGroupByIds, callback: (err: any, result: TnsgetHostGroupByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteAlertCatalogEntries(deleteAlertCatalogEntries: TnsdeleteAlertCatalogEntries, callback: (err: any, result: TnsdeleteAlertCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    rollbackWuDevice(rollbackWuDevice: TnsrollbackWuDevice, callback: (err: any, result: TnsrollbackWuDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getGroupMemberIdByServiceId(getGroupMemberIdByServiceId: TnsgetGroupMemberIdByServiceId, callback: (err: any, result: TnsgetGroupMemberIdByServiceIdResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateMobileDeviceDB(updateMobileDeviceDb: TnsupdateMobileDeviceDb, callback: (err: any, result: TnsupdateMobileDeviceDbResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateVsCatalogEntries(updateVsCatalogEntries: TnsupdateVsCatalogEntries, callback: (err: any, result: TnsupdateVsCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getCocGroupEntriesByIds(getCocGroupEntriesByIds: TnsgetCocGroupEntriesByIds, callback: (err: any, result: TnsgetCocGroupEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQuotaPlans(getQuotaPlans: TnsgetQuotaPlans, callback: (err: any, result: TnsgetQuotaPlansResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getPortsTopicDTO(getPortsTopicDto: TnsgetPortsTopicDto, callback: (err: any, result: TnsgetPortsTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteHheCatalogEntries(deleteHheCatalogEntries: TnsdeleteHheCatalogEntries, callback: (err: any, result: TnsdeleteHheCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateApplicationEntities(updateApplicationEntities: TnsupdateApplicationEntities, callback: (err: any, result: TnsupdateApplicationEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQosEntriesByIds(getQosEntriesByIds: TnsgetQosEntriesByIds, callback: (err: any, result: TnsgetQosEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateTubeTCA(updateTubeTca: TnsupdateTubeTca, callback: (err: any, result: TnsupdateTubeTcaResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllCSSystems(getAllCsSystems: TnsgetAllCsSystems, callback: (err: any, result: TnsgetAllCsSystemsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQuotaRulesByIds(getQuotaRulesByIds: TnsgetQuotaRulesByIds, callback: (err: any, result: TnsgetQuotaRulesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setFacebookPollingTimeInterval(setFacebookPollingTimeInterval: TnssetFacebookPollingTimeInterval, callback: (err: any, result: TnssetFacebookPollingTimeIntervalResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteMdDevice(deleteMdDevice: TnsdeleteMdDevice, callback: (err: any, result: TnsdeleteMdDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateAutonomousSystemFile(updateAutonomousSystemFile: TnsupdateAutonomousSystemFile, callback: (err: any, result: TnsupdateAutonomousSystemFileResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateTimeCatalogEntries(updateTimeCatalogEntries: TnsupdateTimeCatalogEntries, callback: (err: any, result: TnsupdateTimeCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllChargingConditionsByPolicy(getAllChargingConditionsByPolicy: TnsgetAllChargingConditionsByPolicy, callback: (err: any, result: TnsgetAllChargingConditionsByPolicyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getvlanCatalogEntries(getvlanCatalogEntries: TnsgetvlanCatalogEntries, callback: (err: any, result: TnsgetvlanCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    loadWebSafeImportFile(loadWebSafeImportFile: TnsloadWebSafeImportFile, callback: (err: any, result: TnsloadWebSafeImportFileResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updatePolicy(updatePolicy: TnsupdatePolicy, callback: (err: any, result: TnsupdatePolicyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteServiceCatalogEntries(deleteServiceCatalogEntries: TnsdeleteServiceCatalogEntries, callback: (err: any, result: TnsdeleteServiceCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllParameters(getAllParameters: TnsgetAllParameters, callback: (err: any, result: TnsgetAllParametersResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    createAsymGroups(createAsymGroups: TnscreateAsymGroups, callback: (err: any, result: TnscreateAsymGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    saveBlackListCategories(saveBlackListCategories: TnssaveBlackListCategories, callback: (err: any, result: TnssaveBlackListCategoriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHostGroupsByNames(getHostGroupsByNames: TnsgetHostGroupsByNames, callback: (err: any, result: TnsgetHostGroupsByNamesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    saveBlackList(saveBlackList: TnssaveBlackList, callback: (err: any, result: TnssaveBlackListResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServicePlanAddOnEntriesByIds(getServicePlanAddOnEntriesByIds: TnsgetServicePlanAddOnEntriesByIds, callback: (err: any, result: TnsgetServicePlanAddOnEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getUserIdByName(getUserIdByName: TnsgetUserIdByName, callback: (err: any, result: TnsgetUserIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateQuotaPlans(updateQuotaPlans: TnsupdateQuotaPlans, callback: (err: any, result: TnsupdateQuotaPlansResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAlertIdByName(getAlertIdByName: TnsgetAlertIdByName, callback: (err: any, result: TnsgetAlertIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addIfcGroupCatalogEntries(addIfcGroupCatalogEntries: TnsaddIfcGroupCatalogEntries, callback: (err: any, result: TnsaddIfcGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    isQuotaAvilable(isQuotaAvilable: TnsisQuotaAvilable, callback: (err: any, result: TnsisQuotaAvilableResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addVlanGroupCatalogEntries(addVlanGroupCatalogEntries: TnsaddVlanGroupCatalogEntries, callback: (err: any, result: TnsaddVlanGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getFacebookRevisionConfiguration(getFacebookRevisionConfiguration: TnsgetFacebookRevisionConfiguration, callback: (err: any, result: TnsgetFacebookRevisionConfigurationResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllAlarms(getAllAlarms: TnsgetAllAlarms, callback: (err: any, result: TnsgetAllAlarmsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    isRoutingMapBelongToDefaultNetworkDomain(isRoutingMapBelongToDefaultNetworkDomain: TnsisRoutingMapBelongToDefaultNetworkDomain, callback: (err: any, result: TnsisRoutingMapBelongToDefaultNetworkDomainResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addGreGroupCatalogEntries(addGreGroupCatalogEntries: TnsaddGreGroupCatalogEntries, callback: (err: any, result: TnsaddGreGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQoeRuleDefEntriesByIds(getQoeRuleDefEntriesByIds: TnsgetQoeRuleDefEntriesByIds, callback: (err: any, result: TnsgetQoeRuleDefEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteIfcPortCatalogEntries(deleteIfcPortCatalogEntries: TnsdeleteIfcPortCatalogEntries, callback: (err: any, result: TnsdeleteIfcPortCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateGreGroupCatalogEntries(updateGreGroupCatalogEntries: TnsupdateGreGroupCatalogEntries, callback: (err: any, result: TnsupdateGreGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTosIdByName(getTosIdByName: TnsgetTosIdByName, callback: (err: any, result: TnsgetTosIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteIfcGroupCatalogEntries(deleteIfcGroupCatalogEntries: TnsdeleteIfcGroupCatalogEntries, callback: (err: any, result: TnsdeleteIfcGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getProxyServer(getProxyServer: TnsgetProxyServer, callback: (err: any, result: TnsgetProxyServerResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getSGTopic(getSgTopic: TnsgetSgTopic, callback: (err: any, result: TnsgetSgTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTubeGroups(getTubeGroups: TnsgetTubeGroups, callback: (err: any, result: TnsgetTubeGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    modifyRemoteNxs(modifyRemoteNxs: TnsmodifyRemoteNxs, callback: (err: any, result: TnsmodifyRemoteNxsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getLicenseVersion(getLicenseVersion: TnsgetLicenseVersion, callback: (err: any, result: TnsgetLicenseVersionResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getClientDeviceIdByName(getClientDeviceIdByName: TnsgetClientDeviceIdByName, callback: (err: any, result: TnsgetClientDeviceIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDataExportConfig(getDataExportConfig: TnsgetDataExportConfig, callback: (err: any, result: TnsgetDataExportConfigResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getGreIdByName(getGreIdByName: TnsgetGreIdByName, callback: (err: any, result: TnsgetGreIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHostIdByName(getHostIdByName: TnsgetHostIdByName, callback: (err: any, result: TnsgetHostIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllApplicationEntities(getAllApplicationEntities: TnsgetAllApplicationEntities, callback: (err: any, result: TnsgetAllApplicationEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addChargingRule(addChargingRule: TnsaddChargingRule, callback: (err: any, result: TnsaddChargingRuleResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTosEntriesByIds(getTosEntriesByIds: TnsgetTosEntriesByIds, callback: (err: any, result: TnsgetTosEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    reloadProductCapabilities(reloadProductCapabilities: TnsreloadProductCapabilities, callback: (err: any, result: TnsreloadProductCapabilitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTubeDTO1(getTubeDto1: TnsgetTubeDto1, callback: (err: any, result: TnsgetTubeDto1Response, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteGreGroupCatalogEntries(deleteGreGroupCatalogEntries: TnsdeleteGreGroupCatalogEntries, callback: (err: any, result: TnsdeleteGreGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setDeviceSecurityTopic(setDeviceSecurityTopic: TnssetDeviceSecurityTopic, callback: (err: any, result: TnssetDeviceSecurityTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    dumpCache(dumpCache: TnsdumpCache, callback: (err: any, result: TnsdumpCacheResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getPolicyIdByName(getPolicyIdByName: TnsgetPolicyIdByName, callback: (err: any, result: TnsgetPolicyIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getNetworkDomainsByIds(getNetworkDomainsByIds: TnsgetNetworkDomainsByIds, callback: (err: any, result: TnsgetNetworkDomainsByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQoeRuleDefCatalogEntries(getQoeRuleDefCatalogEntries: TnsgetQoeRuleDefCatalogEntries, callback: (err: any, result: TnsgetQoeRuleDefCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getRemoteNxEntities(getRemoteNxEntities: TnsgetRemoteNxEntities, callback: (err: any, result: TnsgetRemoteNxEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDefaultAggregations(getDefaultAggregations: TnsgetDefaultAggregations, callback: (err: any, result: TnsgetDefaultAggregationsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setParameters(setParameters: TnssetParameters, callback: (err: any, result: TnssetParametersResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getContentKeyID(getContentKeyId: TnsgetContentKeyId, callback: (err: any, result: TnsgetContentKeyIdResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addAutonomousSystemEntries(addAutonomousSystemEntries: TnsaddAutonomousSystemEntries, callback: (err: any, result: TnsaddAutonomousSystemEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteServicePlanAddOnEntries(deleteServicePlanAddOnEntries: TnsdeleteServicePlanAddOnEntries, callback: (err: any, result: TnsdeleteServicePlanAddOnEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getBlackList(getBlackList: TnsgetBlackList, callback: (err: any, result: TnsgetBlackListResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateQoeRuleDefCatalogEntries(updateQoeRuleDefCatalogEntries: TnsupdateQoeRuleDefCatalogEntries, callback: (err: any, result: TnsupdateQoeRuleDefCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    removeNppAccounts(removeNppAccounts: TnsremoveNppAccounts, callback: (err: any, result: TnsremoveNppAccountsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllChargingRuleByPolicy(getAllChargingRuleByPolicy: TnsgetAllChargingRuleByPolicy, callback: (err: any, result: TnsgetAllChargingRuleByPolicyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    fetchCellSectors(fetchCellSectors: TnsfetchCellSectors, callback: (err: any, result: TnsfetchCellSectorsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addNppAccount(addNppAccount: TnsaddNppAccount, callback: (err: any, result: TnsaddNppAccountResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteCocGroupCatalogEntries(deleteCocGroupCatalogEntries: TnsdeleteCocGroupCatalogEntries, callback: (err: any, result: TnsdeleteCocGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addBiHaGroup(addBiHaGroup: TnsaddBiHaGroup, callback: (err: any, result: TnsaddBiHaGroupResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateDmGlobalInputFilteringRuleEntities(updateDmGlobalInputFilteringRuleEntities: TnsupdateDmGlobalInputFilteringRuleEntities, callback: (err: any, result: TnsupdateDmGlobalInputFilteringRuleEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getUserSpecificServiceEntities(getUserSpecificServiceEntities: TnsgetUserSpecificServiceEntities, callback: (err: any, result: TnsgetUserSpecificServiceEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateDosCatalogEntries(updateDosCatalogEntries: TnsupdateDosCatalogEntries, callback: (err: any, result: TnsupdateDosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addHheCatalogEntries(addHheCatalogEntries: TnsaddHheCatalogEntries, callback: (err: any, result: TnsaddHheCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getGreGroupIdByName(getGreGroupIdByName: TnsgetGreGroupIdByName, callback: (err: any, result: TnsgetGreGroupIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTosCatalogEntries(getTosCatalogEntries: TnsgetTosCatalogEntries, callback: (err: any, result: TnsgetTosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addTimeCatalogEntries(addTimeCatalogEntries: TnsaddTimeCatalogEntries, callback: (err: any, result: TnsaddTimeCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllNetworkDomains(getAllNetworkDomains: TnsgetAllNetworkDomains, callback: (err: any, result: TnsgetAllNetworkDomainsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    isSupportedProperty(isSupportedProperty: TnsisSupportedProperty, callback: (err: any, result: TnsisSupportedPropertyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQosCatalogEntries(getQosCatalogEntries: TnsgetQosCatalogEntries, callback: (err: any, result: TnsgetQosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteSmpGroup(deleteSmpGroup: TnsdeleteSmpGroup, callback: (err: any, result: TnsdeleteSmpGroupResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteHostCatalogEntries(deleteHostCatalogEntries: TnsdeleteHostCatalogEntries, callback: (err: any, result: TnsdeleteHostCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addTubeGroups(addTubeGroups: TnsaddTubeGroups, callback: (err: any, result: TnsaddTubeGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServiceGroups(getServiceGroups: TnsgetServiceGroups, callback: (err: any, result: TnsgetServiceGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingPlan2AppEntitieaByName(getChargingPlan2AppEntitieaByName: TnsgetChargingPlan2AppEntitieaByName, callback: (err: any, result: TnsgetChargingPlan2AppEntitieaByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    findCsEtlCountByCollectorId(findCsEtlCountByCollectorId: TnsfindCsEtlCountByCollectorId, callback: (err: any, result: TnsfindCsEtlCountByCollectorIdResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDmGlobalTriggerTimeout(getDmGlobalTriggerTimeout: TnsgetDmGlobalTriggerTimeout, callback: (err: any, result: TnsgetDmGlobalTriggerTimeoutResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getIfcGroupCatalogEntries(getIfcGroupCatalogEntries: TnsgetIfcGroupCatalogEntries, callback: (err: any, result: TnsgetIfcGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    isFeatureEnabled(isFeatureEnabled: TnsisFeatureEnabled, callback: (err: any, result: TnsisFeatureEnabledResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addVsCatalogEntries(addVsCatalogEntries: TnsaddVsCatalogEntries, callback: (err: any, result: TnsaddVsCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getCocGroupCatalogEntries(getCocGroupCatalogEntries: TnsgetCocGroupCatalogEntries, callback: (err: any, result: TnsgetCocGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteQuotaPlans(deleteQuotaPlans: TnsdeleteQuotaPlans, callback: (err: any, result: TnsdeleteQuotaPlansResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getNetUnitInterfaceStatus(getNetUnitInterfaceStatus: TnsgetNetUnitInterfaceStatus, callback: (err: any, result: TnsgetNetUnitInterfaceStatusResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTubeTCAs(getTubeTcAs: TnsgetTubeTcAs, callback: (err: any, result: TnsgetTubeTcAsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateVlanCatalogEntries(updateVlanCatalogEntries: TnsupdateVlanCatalogEntries, callback: (err: any, result: TnsupdateVlanCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addServiceCatalogEntries(addServiceCatalogEntries: TnsaddServiceCatalogEntries, callback: (err: any, result: TnsaddServiceCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getCocIdByName(getCocIdByName: TnsgetCocIdByName, callback: (err: any, result: TnsgetCocIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingPlanEntityByName(getChargingPlanEntityByName: TnsgetChargingPlanEntityByName, callback: (err: any, result: TnsgetChargingPlanEntityByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateMdDevice(updateMdDevice: TnsupdateMdDevice, callback: (err: any, result: TnsupdateMdDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteAutonomousSystemFile(deleteAutonomousSystemFile: TnsdeleteAutonomousSystemFile, callback: (err: any, result: TnsdeleteAutonomousSystemFileResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setDmEncryptionKey(setDmEncryptionKey: TnssetDmEncryptionKey, callback: (err: any, result: TnssetDmEncryptionKeyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getEnterpriseSnmpTopicDTO(getEnterpriseSnmpTopicDto: TnsgetEnterpriseSnmpTopicDto, callback: (err: any, result: TnsgetEnterpriseSnmpTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateCocCatalogEntries(updateCocCatalogEntries: TnsupdateCocCatalogEntries, callback: (err: any, result: TnsupdateCocCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getEnterpriseServersTopicDTO(getEnterpriseServersTopicDto: TnsgetEnterpriseServersTopicDto, callback: (err: any, result: TnsgetEnterpriseServersTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDmGlobalInputFilteringRuleXML(getDmGlobalInputFilteringRuleXml: TnsgetDmGlobalInputFilteringRuleXml, callback: (err: any, result: TnsgetDmGlobalInputFilteringRuleXmlResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteEventActionCatalogEntries(deleteEventActionCatalogEntries: TnsdeleteEventActionCatalogEntries, callback: (err: any, result: TnsdeleteEventActionCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getSyslogConnections(getSyslogConnections: TnsgetSyslogConnections, callback: (err: any, result: TnsgetSyslogConnectionsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setConfiguration(setConfiguration: TnssetConfiguration, callback: (err: any, result: TnssetConfigurationResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addTosCatalogEntries(addTosCatalogEntries: TnsaddTosCatalogEntries, callback: (err: any, result: TnsaddTosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addQoeRuleDefCatalogEntries(addQoeRuleDefCatalogEntries: TnsaddQoeRuleDefCatalogEntries, callback: (err: any, result: TnsaddQoeRuleDefCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setEncryptedDatabasePassword(setEncryptedDatabasePassword: TnssetEncryptedDatabasePassword, callback: (err: any, result: TnssetEncryptedDatabasePasswordResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addQosCatalogEntries(addQosCatalogEntries: TnsaddQosCatalogEntries, callback: (err: any, result: TnsaddQosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addRtFilters(addRtFilters: TnsaddRtFilters, callback: (err: any, result: TnsaddRtFiltersResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteQuotaRules(deleteQuotaRules: TnsdeleteQuotaRules, callback: (err: any, result: TnsdeleteQuotaRulesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateVlanGroupCatalogEntries(updateVlanGroupCatalogEntries: TnsupdateVlanGroupCatalogEntries, callback: (err: any, result: TnsupdateVlanGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateSmpRadiusTargets(updateSmpRadiusTargets: TnsupdateSmpRadiusTargets, callback: (err: any, result: TnsupdateSmpRadiusTargetsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getFacebookTrafficControlDTO(getFacebookTrafficControlDto: TnsgetFacebookTrafficControlDto, callback: (err: any, result: TnsgetFacebookTrafficControlDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getRemoteNxsByNames(getRemoteNxsByNames: TnsgetRemoteNxsByNames, callback: (err: any, result: TnsgetRemoteNxsByNamesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDeviceByName(getDeviceByName: TnsgetDeviceByName, callback: (err: any, result: TnsgetDeviceByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHheCatalogEntries(getHheCatalogEntries: TnsgetHheCatalogEntries, callback: (err: any, result: TnsgetHheCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setDmGlobalTriggerTimeout(setDmGlobalTriggerTimeout: TnssetDmGlobalTriggerTimeout, callback: (err: any, result: TnssetDmGlobalTriggerTimeoutResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingAppIdByName(getChargingAppIdByName: TnsgetChargingAppIdByName, callback: (err: any, result: TnsgetChargingAppIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getIfcPortCatalogEntries(getIfcPortCatalogEntries: TnsgetIfcPortCatalogEntries, callback: (err: any, result: TnsgetIfcPortCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDeviceSecurityTopic(getDeviceSecurityTopic: TnsgetDeviceSecurityTopic, callback: (err: any, result: TnsgetDeviceSecurityTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    validateSSGExistence(validateSsgExistence: TnsvalidateSsgExistence, callback: (err: any, result: TnsvalidateSsgExistenceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServiceDataByIds(getServiceDataByIds: TnsgetServiceDataByIds, callback: (err: any, result: TnsgetServiceDataByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    prepareToRedistribute(prepareToRedistribute: TnsprepareToRedistribute, callback: (err: any, result: TnsprepareToRedistributeResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setNxLicense(setNxLicense: TnssetNxLicense, callback: (err: any, result: TnssetNxLicenseResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteQosCatalogEntries(deleteQosCatalogEntries: TnsdeleteQosCatalogEntries, callback: (err: any, result: TnsdeleteQosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getSmpSessionUpdatesAttributesFromTopic(getSmpSessionUpdatesAttributesFromTopic: TnsgetSmpSessionUpdatesAttributesFromTopic, callback: (err: any, result: TnsgetSmpSessionUpdatesAttributesFromTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addQuotaEntries(addQuotaEntries: TnsaddQuotaEntries, callback: (err: any, result: TnsaddQuotaEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteTosCatalogEntries(deleteTosCatalogEntries: TnsdeleteTosCatalogEntries, callback: (err: any, result: TnsdeleteTosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHostEntriesByIds(getHostEntriesByIds: TnsgetHostEntriesByIds, callback: (err: any, result: TnsgetHostEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQuotaEntries(getQuotaEntries: TnsgetQuotaEntries, callback: (err: any, result: TnsgetQuotaEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    rollbackWuServer(rollbackWuServer: TnsrollbackWuServer, callback: (err: any, result: TnsrollbackWuServerResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addAlertCatalogEntries(addAlertCatalogEntries: TnsaddAlertCatalogEntries, callback: (err: any, result: TnsaddAlertCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getParameter(getParameter: TnsgetParameter, callback: (err: any, result: TnsgetParameterResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setDmFieldExtension(setDmFieldExtension: TnssetDmFieldExtension, callback: (err: any, result: TnssetDmFieldExtensionResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setPortsTopicDTO(setPortsTopicDto: TnssetPortsTopicDto, callback: (err: any, result: TnssetPortsTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingPolicy(getChargingPolicy: TnsgetChargingPolicy, callback: (err: any, result: TnsgetChargingPolicyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateQuotaRules(updateQuotaRules: TnsupdateQuotaRules, callback: (err: any, result: TnsupdateQuotaRulesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllDMOutputRecords(getAllDmOutputRecords: TnsgetAllDmOutputRecords, callback: (err: any, result: TnsgetAllDmOutputRecordsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getUserSpecificServiceByName(getUserSpecificServiceByName: TnsgetUserSpecificServiceByName, callback: (err: any, result: TnsgetUserSpecificServiceByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getWebSafeUserByName(getWebSafeUserByName: TnsgetWebSafeUserByName, callback: (err: any, result: TnsgetWebSafeUserByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateDmOutputProfile(updateDmOutputProfile: TnsupdateDmOutputProfile, callback: (err: any, result: TnsupdateDmOutputProfileResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getMonitoredServiceGroupEntriesByIds(getMonitoredServiceGroupEntriesByIds: TnsgetMonitoredServiceGroupEntriesByIds, callback: (err: any, result: TnsgetMonitoredServiceGroupEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addChargingApplicationEntries(addChargingApplicationEntries: TnsaddChargingApplicationEntries, callback: (err: any, result: TnsaddChargingApplicationEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getSmpAttributeTopic(getSmpAttributeTopic: TnsgetSmpAttributeTopic, callback: (err: any, result: TnsgetSmpAttributeTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllRedundantUnits(getAllRedundantUnits: TnsgetAllRedundantUnits, callback: (err: any, result: TnsgetAllRedundantUnitsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getMonitoredServiceGroupEntries(getMonitoredServiceGroupEntries: TnsgetMonitoredServiceGroupEntries, callback: (err: any, result: TnsgetMonitoredServiceGroupEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTopologyCollector(getTopologyCollector: TnsgetTopologyCollector, callback: (err: any, result: TnsgetTopologyCollectorResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getUserByName(getUserByName: TnsgetUserByName, callback: (err: any, result: TnsgetUserByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateServiceCatalogEntries(updateServiceCatalogEntries: TnsupdateServiceCatalogEntries, callback: (err: any, result: TnsupdateServiceCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getApplicationEntitiesByIds(getApplicationEntitiesByIds: TnsgetApplicationEntitiesByIds, callback: (err: any, result: TnsgetApplicationEntitiesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getUserSpecificServiceIdByName(getUserSpecificServiceIdByName: TnsgetUserSpecificServiceIdByName, callback: (err: any, result: TnsgetUserSpecificServiceIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQoeRuleDefIdByName(getQoeRuleDefIdByName: TnsgetQoeRuleDefIdByName, callback: (err: any, result: TnsgetQoeRuleDefIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAutonomousSystemIdByName(getAutonomousSystemIdByName: TnsgetAutonomousSystemIdByName, callback: (err: any, result: TnsgetAutonomousSystemIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteChargingPlanEntries(deleteChargingPlanEntries: TnsdeleteChargingPlanEntries, callback: (err: any, result: TnsdeleteChargingPlanEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAutonomousSystemEntryByName(getAutonomousSystemEntryByName: TnsgetAutonomousSystemEntryByName, callback: (err: any, result: TnsgetAutonomousSystemEntryByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getEventActionEntriesByIds(getEventActionEntriesByIds: TnsgetEventActionEntriesByIds, callback: (err: any, result: TnsgetEventActionEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getActionCatalogEntries(getActionCatalogEntries: TnsgetActionCatalogEntries, callback: (err: any, result: TnsgetActionCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getMdDeviceByName(getMdDeviceByName: TnsgetMdDeviceByName, callback: (err: any, result: TnsgetMdDeviceByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHostCatalogEntries(getHostCatalogEntries: TnsgetHostCatalogEntries, callback: (err: any, result: TnsgetHostCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteHostGroups(deleteHostGroups: TnsdeleteHostGroups, callback: (err: any, result: TnsdeleteHostGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateEventActionCatalogEntries(updateEventActionCatalogEntries: TnsupdateEventActionCatalogEntries, callback: (err: any, result: TnsupdateEventActionCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addQuotaPlans(addQuotaPlans: TnsaddQuotaPlans, callback: (err: any, result: TnsaddQuotaPlansResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addServicePlans(addServicePlans: TnsaddServicePlans, callback: (err: any, result: TnsaddServicePlansResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteDevice(deleteDevice: TnsdeleteDevice, callback: (err: any, result: TnsdeleteDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getNppAccountByName(getNppAccountByName: TnsgetNppAccountByName, callback: (err: any, result: TnsgetNppAccountByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateQuotaCatalogEntries(updateQuotaCatalogEntries: TnsupdateQuotaCatalogEntries, callback: (err: any, result: TnsupdateQuotaCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTubeGroupsByUser(getTubeGroupsByUser: TnsgetTubeGroupsByUser, callback: (err: any, result: TnsgetTubeGroupsByUserResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateServiceGroups(updateServiceGroups: TnsupdateServiceGroups, callback: (err: any, result: TnsupdateServiceGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTubesByNames(getTubesByNames: TnsgetTubesByNames, callback: (err: any, result: TnsgetTubesByNamesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteServicePlans(deleteServicePlans: TnsdeleteServicePlans, callback: (err: any, result: TnsdeleteServicePlansResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getLicense(getLicense: TnsgetLicense, callback: (err: any, result: TnsgetLicenseResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    insertQuotaEvent(insertQuotaEvent: TnsinsertQuotaEvent, callback: (err: any, result: TnsinsertQuotaEventResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateIfcPortCatalogEntries(updateIfcPortCatalogEntries: TnsupdateIfcPortCatalogEntries, callback: (err: any, result: TnsupdateIfcPortCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addEventActionCatalogEntries(addEventActionCatalogEntries: TnsaddEventActionCatalogEntries, callback: (err: any, result: TnsaddEventActionCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteChargingApplicationEntries(deleteChargingApplicationEntries: TnsdeleteChargingApplicationEntries, callback: (err: any, result: TnsdeleteChargingApplicationEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    poll(poll: Tnspoll, callback: (err: any, result: TnspollResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTubeByNames(getTubeByNames: TnsgetTubeByNames, callback: (err: any, result: TnsgetTubeByNamesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setDmProfileEscapeChar(setDmProfileEscapeChar: TnssetDmProfileEscapeChar, callback: (err: any, result: TnssetDmProfileEscapeCharResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateDeviceTCA(updateDeviceTca: TnsupdateDeviceTca, callback: (err: any, result: TnsupdateDeviceTcaResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServicePlanIdByName(getServicePlanIdByName: TnsgetServicePlanIdByName, callback: (err: any, result: TnsgetServicePlanIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addCocGroupCatalogEntries(addCocGroupCatalogEntries: TnsaddCocGroupCatalogEntries, callback: (err: any, result: TnsaddCocGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateSubnetMapFile(updateSubnetMapFile: TnsupdateSubnetMapFile, callback: (err: any, result: TnsupdateSubnetMapFileResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getCocGroupIdByName(getCocGroupIdByName: TnsgetCocGroupIdByName, callback: (err: any, result: TnsgetCocGroupIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addUser(addUser: TnsaddUser, callback: (err: any, result: TnsaddUserResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getNMSReturnCode(getNmsReturnCode: TnsgetNmsReturnCode, callback: (err: any, result: TnsgetNmsReturnCodeResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServicePlanAddOnEntries(getServicePlanAddOnEntries: TnsgetServicePlanAddOnEntries, callback: (err: any, result: TnsgetServicePlanAddOnEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateCocGroupCatalogEntries(updateCocGroupCatalogEntries: TnsupdateCocGroupCatalogEntries, callback: (err: any, result: TnsupdateCocGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateHostCatalogEntries(updateHostCatalogEntries: TnsupdateHostCatalogEntries, callback: (err: any, result: TnsupdateHostCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    createFullSetup(createFullSetup: TnscreateFullSetup, callback: (err: any, result: TnscreateFullSetupResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getNxLicense(getNxLicense: TnsgetNxLicense, callback: (err: any, result: TnsgetNxLicenseResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getEnterpriseGeneralTopicDTO(getEnterpriseGeneralTopicDto: TnsgetEnterpriseGeneralTopicDto, callback: (err: any, result: TnsgetEnterpriseGeneralTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getContentKeyLocalID(getContentKeyLocalId: TnsgetContentKeyLocalId, callback: (err: any, result: TnsgetContentKeyLocalIdResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    sendGenericEvent(sendGenericEvent: TnssendGenericEvent, callback: (err: any, result: TnssendGenericEventResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setNetAwarenessTopic(setNetAwarenessTopic: TnssetNetAwarenessTopic, callback: (err: any, result: TnssetNetAwarenessTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTubeGroupsByIds(getTubeGroupsByIds: TnsgetTubeGroupsByIds, callback: (err: any, result: TnsgetTubeGroupsByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getGroupByName(getGroupByName: TnsgetGroupByName, callback: (err: any, result: TnsgetGroupByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    checkRedundantUnits(checkRedundantUnits: TnscheckRedundantUnits, callback: (err: any, result: TnscheckRedundantUnitsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateIfcGroupCatalogEntries(updateIfcGroupCatalogEntries: TnsupdateIfcGroupCatalogEntries, callback: (err: any, result: TnsupdateIfcGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServiceCatalogEntries(getServiceCatalogEntries: TnsgetServiceCatalogEntries, callback: (err: any, result: TnsgetServiceCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getNetAwarenessTopic(getNetAwarenessTopic: TnsgetNetAwarenessTopic, callback: (err: any, result: TnsgetNetAwarenessTopicResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    isNxFeatureEnabled(isNxFeatureEnabled: TnsisNxFeatureEnabled, callback: (err: any, result: TnsisNxFeatureEnabledResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateGreCatalogEntries(updateGreCatalogEntries: TnsupdateGreCatalogEntries, callback: (err: any, result: TnsupdateGreCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDeviceById(getDeviceById: TnsgetDeviceById, callback: (err: any, result: TnsgetDeviceByIdResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getRoutingMapIdByNameFromDefaultNetworkDomain(getRoutingMapIdByNameFromDefaultNetworkDomain: TnsgetRoutingMapIdByNameFromDefaultNetworkDomain, callback: (err: any, result: TnsgetRoutingMapIdByNameFromDefaultNetworkDomainResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServiceCatLocalIdByName(getServiceCatLocalIdByName: TnsgetServiceCatLocalIdByName, callback: (err: any, result: TnsgetServiceCatLocalIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addDevice(addDevice: TnsaddDevice, callback: (err: any, result: TnsaddDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getPolicyDistributionGroupByName(getPolicyDistributionGroupByName: TnsgetPolicyDistributionGroupByName, callback: (err: any, result: TnsgetPolicyDistributionGroupByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addMonitoredServiceGroupEntries(addMonitoredServiceGroupEntries: TnsaddMonitoredServiceGroupEntries, callback: (err: any, result: TnsaddMonitoredServiceGroupEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQuotaEvents(getQuotaEvents: TnsgetQuotaEvents, callback: (err: any, result: TnsgetQuotaEventsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setEnterpriseExternalServerTopicDTO(setEnterpriseExternalServerTopicDto: TnssetEnterpriseExternalServerTopicDto, callback: (err: any, result: TnssetEnterpriseExternalServerTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addHostGroups(addHostGroups: TnsaddHostGroups, callback: (err: any, result: TnsaddHostGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServicePlanByName(getServicePlanByName: TnsgetServicePlanByName, callback: (err: any, result: TnsgetServicePlanByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getIfcGroupIdByName(getIfcGroupIdByName: TnsgetIfcGroupIdByName, callback: (err: any, result: TnsgetIfcGroupIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addDosCatalogEntries(addDosCatalogEntries: TnsaddDosCatalogEntries, callback: (err: any, result: TnsaddDosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteBiHaGroup(deleteBiHaGroup: TnsdeleteBiHaGroup, callback: (err: any, result: TnsdeleteBiHaGroupResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addApplicationEntities(addApplicationEntities: TnsaddApplicationEntities, callback: (err: any, result: TnsaddApplicationEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAsymGroups(getAsymGroups: TnsgetAsymGroups, callback: (err: any, result: TnsgetAsymGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingApp2ServiceEntities(getChargingApp2ServiceEntities: TnsgetChargingApp2ServiceEntities, callback: (err: any, result: TnsgetChargingApp2ServiceEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTubeDTO(getTubeDto: TnsgetTubeDto, callback: (err: any, result: TnsgetTubeDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addWorkServer(addWorkServer: TnsaddWorkServer, callback: (err: any, result: TnsaddWorkServerResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getGreGroupCatalogEntries(getGreGroupCatalogEntries: TnsgetGreGroupCatalogEntries, callback: (err: any, result: TnsgetGreGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addSmpGroup(addSmpGroup: TnsaddSmpGroup, callback: (err: any, result: TnsaddSmpGroupResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteChargingRule(deleteChargingRule: TnsdeleteChargingRule, callback: (err: any, result: TnsdeleteChargingRuleResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTimeEntriesByIds(getTimeEntriesByIds: TnsgetTimeEntriesByIds, callback: (err: any, result: TnsgetTimeEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDosEntriesByIds(getDosEntriesByIds: TnsgetDosEntriesByIds, callback: (err: any, result: TnsgetDosEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateWuDevice(updateWuDevice: TnsupdateWuDevice, callback: (err: any, result: TnsupdateWuDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteMonitoredServiceGroupEntries(deleteMonitoredServiceGroupEntries: TnsdeleteMonitoredServiceGroupEntries, callback: (err: any, result: TnsdeleteMonitoredServiceGroupEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getVlanGroupCatalogEntries(getVlanGroupCatalogEntries: TnsgetVlanGroupCatalogEntries, callback: (err: any, result: TnsgetVlanGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addClientDeviceGroupEntries(addClientDeviceGroupEntries: TnsaddClientDeviceGroupEntries, callback: (err: any, result: TnsaddClientDeviceGroupEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateHheCatalogEntries(updateHheCatalogEntries: TnsupdateHheCatalogEntries, callback: (err: any, result: TnsupdateHheCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addCocCatalogEntries(addCocCatalogEntries: TnsaddCocCatalogEntries, callback: (err: any, result: TnsaddCocCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getPipes(getPipes: TnsgetPipes, callback: (err: any, result: TnsgetPipesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    revertMonitoredServiceMembersToDefault(revertMonitoredServiceMembersToDefault: TnsrevertMonitoredServiceMembersToDefault, callback: (err: any, result: TnsrevertMonitoredServiceMembersToDefaultResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    exportPolicy1(exportPolicy1: TnsexportPolicy1, callback: (err: any, result: TnsexportPolicy1Response, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setEnterpriseCsTopicDTO(setEnterpriseCsTopicDto: TnssetEnterpriseCsTopicDto, callback: (err: any, result: TnssetEnterpriseCsTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getIfcGroupEntriesByIds(getIfcGroupEntriesByIds: TnsgetIfcGroupEntriesByIds, callback: (err: any, result: TnsgetIfcGroupEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addMdDevice(addMdDevice: TnsaddMdDevice, callback: (err: any, result: TnsaddMdDeviceResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingApplicationEntries(getChargingApplicationEntries: TnsgetChargingApplicationEntries, callback: (err: any, result: TnsgetChargingApplicationEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getControlPlaneIdentifierNames(getControlPlaneIdentifierNames: TnsgetControlPlaneIdentifierNames, callback: (err: any, result: TnsgetControlPlaneIdentifierNamesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteQuotaCatalogEntries(deleteQuotaCatalogEntries: TnsdeleteQuotaCatalogEntries, callback: (err: any, result: TnsdeleteQuotaCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTimeCatalogEntries(getTimeCatalogEntries: TnsgetTimeCatalogEntries, callback: (err: any, result: TnsgetTimeCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setEnterpriseSnmpTopicDTO(setEnterpriseSnmpTopicDto: TnssetEnterpriseSnmpTopicDto, callback: (err: any, result: TnssetEnterpriseSnmpTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllTopologyCollectors(getAllTopologyCollectors: TnsgetAllTopologyCollectors, callback: (err: any, result: TnsgetAllTopologyCollectorsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDmFieldExtension(getDmFieldExtension: TnsgetDmFieldExtension, callback: (err: any, result: TnsgetDmFieldExtensionResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteCocCatalogEntries(deleteCocCatalogEntries: TnsdeleteCocCatalogEntries, callback: (err: any, result: TnsdeleteCocCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServiceIdByName(getServiceIdByName: TnsgetServiceIdByName, callback: (err: any, result: TnsgetServiceIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getVlanIdByName(getVlanIdByName: TnsgetVlanIdByName, callback: (err: any, result: TnsgetVlanIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateUser(updateUser: TnsupdateUser, callback: (err: any, result: TnsupdateUserResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addNetworkDomains(addNetworkDomains: TnsaddNetworkDomains, callback: (err: any, result: TnsaddNetworkDomainsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAlertCounterEntriesByOIds(getAlertCounterEntriesByOIds: TnsgetAlertCounterEntriesByOIds, callback: (err: any, result: TnsgetAlertCounterEntriesByOIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHheEntriesByIds(getHheEntriesByIds: TnsgetHheEntriesByIds, callback: (err: any, result: TnsgetHheEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getGreCatalogEntries(getGreCatalogEntries: TnsgetGreCatalogEntries, callback: (err: any, result: TnsgetGreCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getQuotaRules(getQuotaRules: TnsgetQuotaRules, callback: (err: any, result: TnsgetQuotaRulesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getHostGroups(getHostGroups: TnsgetHostGroups, callback: (err: any, result: TnsgetHostGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addSmpRadiusTargets(addSmpRadiusTargets: TnsaddSmpRadiusTargets, callback: (err: any, result: TnsaddSmpRadiusTargetsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateChargingApplicationEntries(updateChargingApplicationEntries: TnsupdateChargingApplicationEntries, callback: (err: any, result: TnsupdateChargingApplicationEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteTimeCatalogEntries(deleteTimeCatalogEntries: TnsdeleteTimeCatalogEntries, callback: (err: any, result: TnsdeleteTimeCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getInputFilteringRuleListFromXML(getInputFilteringRuleListFromXml: TnsgetInputFilteringRuleListFromXml, callback: (err: any, result: TnsgetInputFilteringRuleListFromXmlResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addServicePlanAddOnEntries(addServicePlanAddOnEntries: TnsaddServicePlanAddOnEntries, callback: (err: any, result: TnsaddServicePlanAddOnEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getVsEntriesByIds(getVsEntriesByIds: TnsgetVsEntriesByIds, callback: (err: any, result: TnsgetVsEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    resolveCatalogNames(resolveCatalogNames: TnsresolveCatalogNames, callback: (err: any, result: TnsresolveCatalogNamesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAlertCatalogEntries(getAlertCatalogEntries: TnsgetAlertCatalogEntries, callback: (err: any, result: TnsgetAlertCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateHostGroups(updateHostGroups: TnsupdateHostGroups, callback: (err: any, result: TnsupdateHostGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateDeployedFacebookRevision(updateDeployedFacebookRevision: TnsupdateDeployedFacebookRevision, callback: (err: any, result: TnsupdateDeployedFacebookRevisionResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addCountryClassification(addCountryClassification: TnsaddCountryClassification, callback: (err: any, result: TnsaddCountryClassificationResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getCocEntriesByIds(getCocEntriesByIds: TnsgetCocEntriesByIds, callback: (err: any, result: TnsgetCocEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addHostCatalogEntries(addHostCatalogEntries: TnsaddHostCatalogEntries, callback: (err: any, result: TnsaddHostCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getEnterpriseExternalServerTopicDTO(getEnterpriseExternalServerTopicDto: TnsgetEnterpriseExternalServerTopicDto, callback: (err: any, result: TnsgetEnterpriseExternalServerTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    sendASGeoBackupEvent(sendAsGeoBackupEvent: TnssendAsGeoBackupEvent, callback: (err: any, result: TnssendAsGeoBackupEventResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteAutonomousSystemEntries(deleteAutonomousSystemEntries: TnsdeleteAutonomousSystemEntries, callback: (err: any, result: TnsdeleteAutonomousSystemEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateDMOutputRecord(updateDmOutputRecord: TnsupdateDmOutputRecord, callback: (err: any, result: TnsupdateDmOutputRecordResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateServicePlans(updateServicePlans: TnsupdateServicePlans, callback: (err: any, result: TnsupdateServicePlansResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteWorkServer(deleteWorkServer: TnsdeleteWorkServer, callback: (err: any, result: TnsdeleteWorkServerResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getPolicy(getPolicy: TnsgetPolicy, callback: (err: any, result: TnsgetPolicyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getEnterpriseAddedServicesTopicDTO(getEnterpriseAddedServicesTopicDto: TnsgetEnterpriseAddedServicesTopicDto, callback: (err: any, result: TnsgetEnterpriseAddedServicesTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServicePlansByIds(getServicePlansByIds: TnsgetServicePlansByIds, callback: (err: any, result: TnsgetServicePlansByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getPorts(getPorts: TnsgetPorts, callback: (err: any, result: TnsgetPortsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteVlanGroupCatalogEntries(deleteVlanGroupCatalogEntries: TnsdeleteVlanGroupCatalogEntries, callback: (err: any, result: TnsdeleteVlanGroupCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    revertServiceEntryToDefault(revertServiceEntryToDefault: TnsrevertServiceEntryToDefault, callback: (err: any, result: TnsrevertServiceEntryToDefaultResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServicePlans(getServicePlans: TnsgetServicePlans, callback: (err: any, result: TnsgetServicePlansResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getGreEntriesByIds(getGreEntriesByIds: TnsgetGreEntriesByIds, callback: (err: any, result: TnsgetGreEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getVlanGroupEntriesByIds(getVlanGroupEntriesByIds: TnsgetVlanGroupEntriesByIds, callback: (err: any, result: TnsgetVlanGroupEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    modifyTopologyCollector(modifyTopologyCollector: TnsmodifyTopologyCollector, callback: (err: any, result: TnsmodifyTopologyCollectorResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllDmOutputProfileEntities(getAllDmOutputProfileEntities: TnsgetAllDmOutputProfileEntities, callback: (err: any, result: TnsgetAllDmOutputProfileEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateAllChargingRuleForCost(updateAllChargingRuleForCost: TnsupdateAllChargingRuleForCost, callback: (err: any, result: TnsupdateAllChargingRuleForCostResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addWebSafeUser(addWebSafeUser: TnsaddWebSafeUser, callback: (err: any, result: TnsaddWebSafeUserResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getIfcPortIdByName(getIfcPortIdByName: TnsgetIfcPortIdByName, callback: (err: any, result: TnsgetIfcPortIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllAutonomousSystemEntries(getAllAutonomousSystemEntries: TnsgetAllAutonomousSystemEntries, callback: (err: any, result: TnsgetAllAutonomousSystemEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDeviceTCAs(getDeviceTcAs: TnsgetDeviceTcAs, callback: (err: any, result: TnsgetDeviceTcAsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    modifySnmpV3UserData(modifySnmpV3UserData: TnsmodifySnmpV3UserData, callback: (err: any, result: TnsmodifySnmpV3UserDataResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getVlanEntriesByIds(getVlanEntriesByIds: TnsgetVlanEntriesByIds, callback: (err: any, result: TnsgetVlanEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getAllWorkServer(getAllWorkServer: TnsgetAllWorkServer, callback: (err: any, result: TnsgetAllWorkServerResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addSubscribers(addSubscribers: TnsaddSubscribers, callback: (err: any, result: TnsaddSubscribersResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteDosCatalogEntries(deleteDosCatalogEntries: TnsdeleteDosCatalogEntries, callback: (err: any, result: TnsdeleteDosCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServiceEntriesByIds(getServiceEntriesByIds: TnsgetServiceEntriesByIds, callback: (err: any, result: TnsgetServiceEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setSyslogConnections(setSyslogConnections: TnssetSyslogConnections, callback: (err: any, result: TnssetSyslogConnectionsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getServicesByNames(getServicesByNames: TnsgetServicesByNames, callback: (err: any, result: TnsgetServicesByNamesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateMonitoredServiceGroupEntries(updateMonitoredServiceGroupEntries: TnsupdateMonitoredServiceGroupEntries, callback: (err: any, result: TnsupdateMonitoredServiceGroupEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getChargingApp2ServiceEntitiesByName(getChargingApp2ServiceEntitiesByName: TnsgetChargingApp2ServiceEntitiesByName, callback: (err: any, result: TnsgetChargingApp2ServiceEntitiesByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addGreCatalogEntries(addGreCatalogEntries: TnsaddGreCatalogEntries, callback: (err: any, result: TnsaddGreCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getCmtsIdByName(getCmtsIdByName: TnsgetCmtsIdByName, callback: (err: any, result: TnsgetCmtsIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setSyslogEnabled(setSyslogEnabled: TnssetSyslogEnabled, callback: (err: any, result: TnssetSyslogEnabledResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    assignSmpRouterToSmpGroup(assignSmpRouterToSmpGroup: TnsassignSmpRouterToSmpGroup, callback: (err: any, result: TnsassignSmpRouterToSmpGroupResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    setEnterpriseServersTopicDTO(setEnterpriseServersTopicDto: TnssetEnterpriseServersTopicDto, callback: (err: any, result: TnssetEnterpriseServersTopicDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDosIdByName(getDosIdByName: TnsgetDosIdByName, callback: (err: any, result: TnsgetDosIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addQuotaRules(addQuotaRules: TnsaddQuotaRules, callback: (err: any, result: TnsaddQuotaRulesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateChargingRule(updateChargingRule: TnsupdateChargingRule, callback: (err: any, result: TnsupdateChargingRuleResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteClientDeviceGroupEntries(deleteClientDeviceGroupEntries: TnsdeleteClientDeviceGroupEntries, callback: (err: any, result: TnsdeleteClientDeviceGroupEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getTimeIdByName(getTimeIdByName: TnsgetTimeIdByName, callback: (err: any, result: TnsgetTimeIdByNameResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    updateChargingPlanEntries(updateChargingPlanEntries: TnsupdateChargingPlanEntries, callback: (err: any, result: TnsupdateChargingPlanEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getIfcPortEntriesByIds(getIfcPortEntriesByIds: TnsgetIfcPortEntriesByIds, callback: (err: any, result: TnsgetIfcPortEntriesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getDmInputFilteringRileListXML(getDmInputFilteringRileListXml: TnsgetDmInputFilteringRileListXml, callback: (err: any, result: TnsgetDmInputFilteringRileListXmlResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    addChargingPlanEntries(addChargingPlanEntries: TnsaddChargingPlanEntries, callback: (err: any, result: TnsaddChargingPlanEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    exportDefaultPolicy(exportDefaultPolicy: TnsexportDefaultPolicy, callback: (err: any, result: TnsexportDefaultPolicyResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    deleteServiceGroups(deleteServiceGroups: TnsdeleteServiceGroups, callback: (err: any, result: TnsdeleteServiceGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getFullTubeDTO(getFullTubeDto: TnsgetFullTubeDto, callback: (err: any, result: TnsgetFullTubeDtoResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
    getVsCatalogEntries(getVsCatalogEntries: TnsgetVsCatalogEntries, callback: (err: any, result: TnsgetVsCatalogEntriesResponse, rawResponse: any, soapHeader: any, rawRequest: any) => void): void;
}
